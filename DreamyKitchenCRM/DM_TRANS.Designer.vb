'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),
 Global.System.ComponentModel.ToolboxItem(True),
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),
 Global.System.Xml.Serialization.XmlRootAttribute("DM_TRANS"),
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>
Partial Public Class DM_TRANS
    Inherits Global.System.Data.DataSet

    Private tablevw_TRANSH_C As vw_TRANSH_CDataTable

    Private tablevw_TRANSD As vw_TRANSDDataTable

    Private tableTRANSH_F As TRANSH_FDataTable

    Private tablevw_TRANSH As vw_TRANSHDataTable

    Private tableCCT_TRANSH As CCT_TRANSHDataTable

    Private tablevw_PAYTYPES As vw_PAYTYPESDataTable

    Private tablevw_TRANS_EXTRA_CHARGES As vw_TRANS_EXTRA_CHARGESDataTable

    Private tablevw_TRANSD_Credit As vw_TRANSD_CreditDataTable

    Private tablevw_TRANSD_Debit As vw_TRANSD_DebitDataTable

    Private tableCOMP_CCT_TRANSH As COMP_CCT_TRANSHDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vw_TRANSH_C")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSH_CDataTable(ds.Tables("vw_TRANSH_C")))
            End If
            If (Not (ds.Tables("vw_TRANSD")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSDDataTable(ds.Tables("vw_TRANSD")))
            End If
            If (Not (ds.Tables("TRANSH_F")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSH_FDataTable(ds.Tables("TRANSH_F")))
            End If
            If (Not (ds.Tables("vw_TRANSH")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSHDataTable(ds.Tables("vw_TRANSH")))
            End If
            If (Not (ds.Tables("CCT_TRANSH")) Is Nothing) Then
                MyBase.Tables.Add(New CCT_TRANSHDataTable(ds.Tables("CCT_TRANSH")))
            End If
            If (Not (ds.Tables("vw_PAYTYPES")) Is Nothing) Then
                MyBase.Tables.Add(New vw_PAYTYPESDataTable(ds.Tables("vw_PAYTYPES")))
            End If
            If (Not (ds.Tables("vw_TRANS_EXTRA_CHARGES")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANS_EXTRA_CHARGESDataTable(ds.Tables("vw_TRANS_EXTRA_CHARGES")))
            End If
            If (Not (ds.Tables("vw_TRANSD_Credit")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSD_CreditDataTable(ds.Tables("vw_TRANSD_Credit")))
            End If
            If (Not (ds.Tables("vw_TRANSD_Debit")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSD_DebitDataTable(ds.Tables("vw_TRANSD_Debit")))
            End If
            If (Not (ds.Tables("COMP_CCT_TRANSH")) Is Nothing) Then
                MyBase.Tables.Add(New COMP_CCT_TRANSHDataTable(ds.Tables("COMP_CCT_TRANSH")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_TRANSH_C() As vw_TRANSH_CDataTable
        Get
            Return Me.tablevw_TRANSH_C
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_TRANSD() As vw_TRANSDDataTable
        Get
            Return Me.tablevw_TRANSD
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property TRANSH_F() As TRANSH_FDataTable
        Get
            Return Me.tableTRANSH_F
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_TRANSH() As vw_TRANSHDataTable
        Get
            Return Me.tablevw_TRANSH
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property CCT_TRANSH() As CCT_TRANSHDataTable
        Get
            Return Me.tableCCT_TRANSH
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_PAYTYPES() As vw_PAYTYPESDataTable
        Get
            Return Me.tablevw_PAYTYPES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_TRANS_EXTRA_CHARGES() As vw_TRANS_EXTRA_CHARGESDataTable
        Get
            Return Me.tablevw_TRANS_EXTRA_CHARGES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_TRANSD_Credit() As vw_TRANSD_CreditDataTable
        Get
            Return Me.tablevw_TRANSD_Credit
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property vw_TRANSD_Debit() As vw_TRANSD_DebitDataTable
        Get
            Return Me.tablevw_TRANSD_Debit
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
    Public ReadOnly Property COMP_CCT_TRANSH() As COMP_CCT_TRANSHDataTable
        Get
            Return Me.tableCOMP_CCT_TRANSH
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.BrowsableAttribute(True),
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DM_TRANS = CType(MyBase.Clone, DM_TRANS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("vw_TRANSH_C")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSH_CDataTable(ds.Tables("vw_TRANSH_C")))
            End If
            If (Not (ds.Tables("vw_TRANSD")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSDDataTable(ds.Tables("vw_TRANSD")))
            End If
            If (Not (ds.Tables("TRANSH_F")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSH_FDataTable(ds.Tables("TRANSH_F")))
            End If
            If (Not (ds.Tables("vw_TRANSH")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSHDataTable(ds.Tables("vw_TRANSH")))
            End If
            If (Not (ds.Tables("CCT_TRANSH")) Is Nothing) Then
                MyBase.Tables.Add(New CCT_TRANSHDataTable(ds.Tables("CCT_TRANSH")))
            End If
            If (Not (ds.Tables("vw_PAYTYPES")) Is Nothing) Then
                MyBase.Tables.Add(New vw_PAYTYPESDataTable(ds.Tables("vw_PAYTYPES")))
            End If
            If (Not (ds.Tables("vw_TRANS_EXTRA_CHARGES")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANS_EXTRA_CHARGESDataTable(ds.Tables("vw_TRANS_EXTRA_CHARGES")))
            End If
            If (Not (ds.Tables("vw_TRANSD_Credit")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSD_CreditDataTable(ds.Tables("vw_TRANSD_Credit")))
            End If
            If (Not (ds.Tables("vw_TRANSD_Debit")) Is Nothing) Then
                MyBase.Tables.Add(New vw_TRANSD_DebitDataTable(ds.Tables("vw_TRANSD_Debit")))
            End If
            If (Not (ds.Tables("COMP_CCT_TRANSH")) Is Nothing) Then
                MyBase.Tables.Add(New COMP_CCT_TRANSHDataTable(ds.Tables("COMP_CCT_TRANSH")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevw_TRANSH_C = CType(MyBase.Tables("vw_TRANSH_C"), vw_TRANSH_CDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_TRANSH_C) Is Nothing) Then
                Me.tablevw_TRANSH_C.InitVars
            End If
        End If
        Me.tablevw_TRANSD = CType(MyBase.Tables("vw_TRANSD"), vw_TRANSDDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_TRANSD) Is Nothing) Then
                Me.tablevw_TRANSD.InitVars
            End If
        End If
        Me.tableTRANSH_F = CType(MyBase.Tables("TRANSH_F"), TRANSH_FDataTable)
        If (initTable = True) Then
            If (Not (Me.tableTRANSH_F) Is Nothing) Then
                Me.tableTRANSH_F.InitVars
            End If
        End If
        Me.tablevw_TRANSH = CType(MyBase.Tables("vw_TRANSH"), vw_TRANSHDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_TRANSH) Is Nothing) Then
                Me.tablevw_TRANSH.InitVars
            End If
        End If
        Me.tableCCT_TRANSH = CType(MyBase.Tables("CCT_TRANSH"), CCT_TRANSHDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCCT_TRANSH) Is Nothing) Then
                Me.tableCCT_TRANSH.InitVars
            End If
        End If
        Me.tablevw_PAYTYPES = CType(MyBase.Tables("vw_PAYTYPES"), vw_PAYTYPESDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_PAYTYPES) Is Nothing) Then
                Me.tablevw_PAYTYPES.InitVars
            End If
        End If
        Me.tablevw_TRANS_EXTRA_CHARGES = CType(MyBase.Tables("vw_TRANS_EXTRA_CHARGES"), vw_TRANS_EXTRA_CHARGESDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_TRANS_EXTRA_CHARGES) Is Nothing) Then
                Me.tablevw_TRANS_EXTRA_CHARGES.InitVars
            End If
        End If
        Me.tablevw_TRANSD_Credit = CType(MyBase.Tables("vw_TRANSD_Credit"), vw_TRANSD_CreditDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_TRANSD_Credit) Is Nothing) Then
                Me.tablevw_TRANSD_Credit.InitVars
            End If
        End If
        Me.tablevw_TRANSD_Debit = CType(MyBase.Tables("vw_TRANSD_Debit"), vw_TRANSD_DebitDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevw_TRANSD_Debit) Is Nothing) Then
                Me.tablevw_TRANSD_Debit.InitVars
            End If
        End If
        Me.tableCOMP_CCT_TRANSH = CType(MyBase.Tables("COMP_CCT_TRANSH"), COMP_CCT_TRANSHDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCOMP_CCT_TRANSH) Is Nothing) Then
                Me.tableCOMP_CCT_TRANSH.InitVars
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Sub InitClass()
        Me.DataSetName = "DM_TRANS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DreamyKitchenDEVDataSet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevw_TRANSH_C = New vw_TRANSH_CDataTable()
        MyBase.Tables.Add(Me.tablevw_TRANSH_C)
        Me.tablevw_TRANSD = New vw_TRANSDDataTable()
        MyBase.Tables.Add(Me.tablevw_TRANSD)
        Me.tableTRANSH_F = New TRANSH_FDataTable()
        MyBase.Tables.Add(Me.tableTRANSH_F)
        Me.tablevw_TRANSH = New vw_TRANSHDataTable()
        MyBase.Tables.Add(Me.tablevw_TRANSH)
        Me.tableCCT_TRANSH = New CCT_TRANSHDataTable()
        MyBase.Tables.Add(Me.tableCCT_TRANSH)
        Me.tablevw_PAYTYPES = New vw_PAYTYPESDataTable()
        MyBase.Tables.Add(Me.tablevw_PAYTYPES)
        Me.tablevw_TRANS_EXTRA_CHARGES = New vw_TRANS_EXTRA_CHARGESDataTable()
        MyBase.Tables.Add(Me.tablevw_TRANS_EXTRA_CHARGES)
        Me.tablevw_TRANSD_Credit = New vw_TRANSD_CreditDataTable()
        MyBase.Tables.Add(Me.tablevw_TRANSD_Credit)
        Me.tablevw_TRANSD_Debit = New vw_TRANSD_DebitDataTable()
        MyBase.Tables.Add(Me.tablevw_TRANSD_Debit)
        Me.tableCOMP_CCT_TRANSH = New COMP_CCT_TRANSHDataTable()
        MyBase.Tables.Add(Me.tableCOMP_CCT_TRANSH)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_TRANSH_C() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_TRANSD() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializeTRANSH_F() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_TRANSH() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializeCCT_TRANSH() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_PAYTYPES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_TRANS_EXTRA_CHARGES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_TRANSD_Credit() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializevw_TRANSD_Debit() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Function ShouldSerializeCOMP_CCT_TRANSH() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DM_TRANS = New DM_TRANS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_TRANSH_CRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_TRANSH_CRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_TRANSDRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_TRANSDRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub TRANSH_FRowChangeEventHandler(ByVal sender As Object, ByVal e As TRANSH_FRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_TRANSHRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_TRANSHRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub CCT_TRANSHRowChangeEventHandler(ByVal sender As Object, ByVal e As CCT_TRANSHRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_PAYTYPESRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_PAYTYPESRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_TRANS_EXTRA_CHARGESRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_TRANS_EXTRA_CHARGESRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_TRANSD_CreditRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_TRANSD_CreditRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub vw_TRANSD_DebitRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_TRANSD_DebitRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Delegate Sub COMP_CCT_TRANSHRowChangeEventHandler(ByVal sender As Object, ByVal e As COMP_CCT_TRANSHRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_TRANSH_CDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_TRANSH_CRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columnname As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_TRANSH_C"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_TRANSH_CRow
            Get
                Return CType(Me.Rows(index), vw_TRANSH_CRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSH_CRowChanging As vw_TRANSH_CRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSH_CRowChanged As vw_TRANSH_CRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSH_CRowDeleting As vw_TRANSH_CRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSH_CRowDeleted As vw_TRANSH_CRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_TRANSH_CRow(ByVal row As vw_TRANSH_CRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_TRANSH_CRow(ByVal ID As System.Guid, ByVal code As Integer, ByVal name As String, ByVal modifiedBy As System.Guid, ByVal modifiedOn As Date, ByVal createdOn As Date, ByVal createdBy As System.Guid, ByVal RealName As String) As vw_TRANSH_CRow
            Dim rowvw_TRANSH_CRow As vw_TRANSH_CRow = CType(Me.NewRow, vw_TRANSH_CRow)
            Dim columnValuesArray() As Object = New Object() {ID, code, name, modifiedBy, modifiedOn, createdOn, createdBy, RealName}
            rowvw_TRANSH_CRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_TRANSH_CRow)
            Return rowvw_TRANSH_CRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As vw_TRANSH_CRow
            Return CType(Me.Rows.Find(New Object() {ID}), vw_TRANSH_CRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_TRANSH_CDataTable = CType(MyBase.Clone, vw_TRANSH_CDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_TRANSH_CDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columnname = MyBase.Columns("name")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
            Me.columnRealName = MyBase.Columns("RealName")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columncode.AllowDBNull = False
            Me.columnname.AllowDBNull = False
            Me.columnname.MaxLength = 50
            Me.columnRealName.MaxLength = 200
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_TRANSH_CRow() As vw_TRANSH_CRow
            Return CType(Me.NewRow, vw_TRANSH_CRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_TRANSH_CRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_TRANSH_CRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_TRANSH_CRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSH_CRowChanged(Me, New vw_TRANSH_CRowChangeEvent(CType(e.Row, vw_TRANSH_CRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_TRANSH_CRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSH_CRowChanging(Me, New vw_TRANSH_CRowChangeEvent(CType(e.Row, vw_TRANSH_CRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_TRANSH_CRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSH_CRowDeleted(Me, New vw_TRANSH_CRowChangeEvent(CType(e.Row, vw_TRANSH_CRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_TRANSH_CRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSH_CRowDeleting(Me, New vw_TRANSH_CRowChangeEvent(CType(e.Row, vw_TRANSH_CRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_TRANSH_CRow(ByVal row As vw_TRANSH_CRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_TRANSH_CDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_TRANSDDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_TRANSDRow)

        Private columnID As Global.System.Data.DataColumn

        Private columntranshID As Global.System.Data.DataColumn

        Private columnBankName As Global.System.Data.DataColumn

        Private columncash As Global.System.Data.DataColumn

        Private columnamt As Global.System.Data.DataColumn

        Private columncmt As Global.System.Data.DataColumn

        Private columndtPay As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columnbankID As Global.System.Data.DataColumn

        Private columnGRMONTH As Global.System.Data.DataColumn

        Private columnpaid As Global.System.Data.DataColumn

        Private columnPayTypeName As Global.System.Data.DataColumn

        Private columnPayTypeID As Global.System.Data.DataColumn

        Private columndepositor As Global.System.Data.DataColumn

        Private columncctFullname As Global.System.Data.DataColumn

        Private columncusID As Global.System.Data.DataColumn

        Private columnisCredit As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_TRANSD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property transhIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntranshID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property BankNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cashColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncash
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property amtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property dtPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtPay
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property bankIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbankID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property GRMONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMONTH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property paidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property PayTypeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayTypeName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property PayTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayTypeID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property depositorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepositor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cctFullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncctFullname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cusIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncusID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property isCreditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisCredit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_TRANSDRow
            Get
                Return CType(Me.Rows(index), vw_TRANSDRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSDRowChanging As vw_TRANSDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSDRowChanged As vw_TRANSDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSDRowDeleting As vw_TRANSDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSDRowDeleted As vw_TRANSDRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_TRANSDRow(ByVal row As vw_TRANSDRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_TRANSDRow(
                    ByVal ID As System.Guid,
                    ByVal transhID As System.Guid,
                    ByVal BankName As String,
                    ByVal cash As Boolean,
                    ByVal amt As Decimal,
                    ByVal cmt As String,
                    ByVal dtPay As Date,
                    ByVal RealName As String,
                    ByVal modifiedOn As Date,
                    ByVal createdOn As Date,
                    ByVal bankID As System.Guid,
                    ByVal GRMONTH As String,
                    ByVal paid As Boolean,
                    ByVal PayTypeName As String,
                    ByVal PayTypeID As System.Guid,
                    ByVal depositor As String,
                    ByVal cctFullname As String,
                    ByVal cusID As System.Guid,
                    ByVal isCredit As Boolean) As vw_TRANSDRow
            Dim rowvw_TRANSDRow As vw_TRANSDRow = CType(Me.NewRow, vw_TRANSDRow)
            Dim columnValuesArray() As Object = New Object() {ID, transhID, BankName, cash, amt, cmt, dtPay, RealName, modifiedOn, createdOn, bankID, GRMONTH, paid, PayTypeName, PayTypeID, depositor, cctFullname, cusID, isCredit}
            rowvw_TRANSDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_TRANSDRow)
            Return rowvw_TRANSDRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As vw_TRANSDRow
            Return CType(Me.Rows.Find(New Object() {ID}), vw_TRANSDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_TRANSDDataTable = CType(MyBase.Clone, vw_TRANSDDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_TRANSDDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columntranshID = MyBase.Columns("transhID")
            Me.columnBankName = MyBase.Columns("BankName")
            Me.columncash = MyBase.Columns("cash")
            Me.columnamt = MyBase.Columns("amt")
            Me.columncmt = MyBase.Columns("cmt")
            Me.columndtPay = MyBase.Columns("dtPay")
            Me.columnRealName = MyBase.Columns("RealName")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columnbankID = MyBase.Columns("bankID")
            Me.columnGRMONTH = MyBase.Columns("GRMONTH")
            Me.columnpaid = MyBase.Columns("paid")
            Me.columnPayTypeName = MyBase.Columns("PayTypeName")
            Me.columnPayTypeID = MyBase.Columns("PayTypeID")
            Me.columndepositor = MyBase.Columns("depositor")
            Me.columncctFullname = MyBase.Columns("cctFullname")
            Me.columncusID = MyBase.Columns("cusID")
            Me.columnisCredit = MyBase.Columns("isCredit")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columntranshID = New Global.System.Data.DataColumn("transhID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntranshID)
            Me.columnBankName = New Global.System.Data.DataColumn("BankName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankName)
            Me.columncash = New Global.System.Data.DataColumn("cash", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncash)
            Me.columnamt = New Global.System.Data.DataColumn("amt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamt)
            Me.columncmt = New Global.System.Data.DataColumn("cmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmt)
            Me.columndtPay = New Global.System.Data.DataColumn("dtPay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtPay)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columnbankID = New Global.System.Data.DataColumn("bankID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbankID)
            Me.columnGRMONTH = New Global.System.Data.DataColumn("GRMONTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMONTH)
            Me.columnpaid = New Global.System.Data.DataColumn("paid", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaid)
            Me.columnPayTypeName = New Global.System.Data.DataColumn("PayTypeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayTypeName)
            Me.columnPayTypeID = New Global.System.Data.DataColumn("PayTypeID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayTypeID)
            Me.columndepositor = New Global.System.Data.DataColumn("depositor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepositor)
            Me.columncctFullname = New Global.System.Data.DataColumn("cctFullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncctFullname)
            Me.columncusID = New Global.System.Data.DataColumn("cusID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncusID)
            Me.columnisCredit = New Global.System.Data.DataColumn("isCredit", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisCredit)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columntranshID.AllowDBNull = False
            Me.columnBankName.MaxLength = 150
            Me.columncash.AllowDBNull = False
            Me.columncmt.MaxLength = 2147483647
            Me.columndtPay.AllowDBNull = False
            Me.columnRealName.MaxLength = 200
            Me.columnGRMONTH.ReadOnly = True
            Me.columnGRMONTH.MaxLength = 50
            Me.columnPayTypeName.AllowDBNull = False
            Me.columnPayTypeName.MaxLength = 150
            Me.columndepositor.MaxLength = 100
            Me.columncctFullname.MaxLength = 200
            Me.columnisCredit.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_TRANSDRow() As vw_TRANSDRow
            Return CType(Me.NewRow, vw_TRANSDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_TRANSDRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_TRANSDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_TRANSDRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSDRowChanged(Me, New vw_TRANSDRowChangeEvent(CType(e.Row, vw_TRANSDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_TRANSDRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSDRowChanging(Me, New vw_TRANSDRowChangeEvent(CType(e.Row, vw_TRANSDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_TRANSDRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSDRowDeleted(Me, New vw_TRANSDRowChangeEvent(CType(e.Row, vw_TRANSDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_TRANSDRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSDRowDeleting(Me, New vw_TRANSDRowChangeEvent(CType(e.Row, vw_TRANSDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_TRANSDRow(ByVal row As vw_TRANSDRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_TRANSDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class TRANSH_FDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRANSH_FRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columntranshID As Global.System.Data.DataColumn

        Private columnfilename As Global.System.Data.DataColumn

        Private columncomefrom As Global.System.Data.DataColumn

        Private columnextension As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        Private columnFileCategory As Global.System.Data.DataColumn

        Private columnfileCatID As Global.System.Data.DataColumn

        Private columnownerID As Global.System.Data.DataColumn

        Private columnbelongsTo As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "TRANSH_F"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property transhIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntranshID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property filenameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfilename
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property comefromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomefrom
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property extensionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnextension
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FileCategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFileCategory
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property fileCatIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfileCatID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property ownerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnownerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property belongsToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbelongsTo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As TRANSH_FRow
            Get
                Return CType(Me.Rows(index), TRANSH_FRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event TRANSH_FRowChanging As TRANSH_FRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event TRANSH_FRowChanged As TRANSH_FRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event TRANSH_FRowDeleting As TRANSH_FRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event TRANSH_FRowDeleted As TRANSH_FRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub AddTRANSH_FRow(ByVal row As TRANSH_FRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function AddTRANSH_FRow(ByVal ID As System.Guid, ByVal transhID As System.Guid, ByVal filename As String, ByVal comefrom As String, ByVal extension As String, ByVal modifiedBy As System.Guid, ByVal modifiedOn As Date, ByVal createdOn As Date, ByVal createdBy As System.Guid, ByVal FileCategory As String, ByVal fileCatID As System.Guid, ByVal ownerID As System.Guid, ByVal belongsTo As String) As TRANSH_FRow
            Dim rowTRANSH_FRow As TRANSH_FRow = CType(Me.NewRow, TRANSH_FRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nothing, transhID, filename, comefrom, extension, modifiedBy, modifiedOn, createdOn, createdBy, FileCategory, fileCatID, ownerID, belongsTo}
            rowTRANSH_FRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRANSH_FRow)
            Return rowTRANSH_FRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As TRANSH_FRow
            Return CType(Me.Rows.Find(New Object() {ID}), TRANSH_FRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRANSH_FDataTable = CType(MyBase.Clone, TRANSH_FDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRANSH_FDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columntranshID = MyBase.Columns("transhID")
            Me.columnfilename = MyBase.Columns("filename")
            Me.columncomefrom = MyBase.Columns("comefrom")
            Me.columnextension = MyBase.Columns("extension")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
            Me.columnFileCategory = MyBase.Columns("FileCategory")
            Me.columnfileCatID = MyBase.Columns("fileCatID")
            Me.columnownerID = MyBase.Columns("ownerID")
            Me.columnbelongsTo = MyBase.Columns("belongsTo")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columntranshID = New Global.System.Data.DataColumn("transhID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntranshID)
            Me.columnfilename = New Global.System.Data.DataColumn("filename", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfilename)
            Me.columncomefrom = New Global.System.Data.DataColumn("comefrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomefrom)
            Me.columnextension = New Global.System.Data.DataColumn("extension", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnextension)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.columnFileCategory = New Global.System.Data.DataColumn("FileCategory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFileCategory)
            Me.columnfileCatID = New Global.System.Data.DataColumn("fileCatID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfileCatID)
            Me.columnownerID = New Global.System.Data.DataColumn("ownerID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnownerID)
            Me.columnbelongsTo = New Global.System.Data.DataColumn("belongsTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbelongsTo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columncode.AutoIncrement = True
            Me.columncode.AutoIncrementSeed = -1
            Me.columncode.AutoIncrementStep = -1
            Me.columncode.AllowDBNull = False
            Me.columncode.ReadOnly = True
            Me.columnfilename.MaxLength = 200
            Me.columncomefrom.MaxLength = 400
            Me.columnextension.MaxLength = 10
            Me.columnFileCategory.MaxLength = 150
            Me.columnbelongsTo.MaxLength = 20
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function NewTRANSH_FRow() As TRANSH_FRow
            Return CType(Me.NewRow, TRANSH_FRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRANSH_FRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRANSH_FRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRANSH_FRowChangedEvent) Is Nothing) Then
                RaiseEvent TRANSH_FRowChanged(Me, New TRANSH_FRowChangeEvent(CType(e.Row, TRANSH_FRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRANSH_FRowChangingEvent) Is Nothing) Then
                RaiseEvent TRANSH_FRowChanging(Me, New TRANSH_FRowChangeEvent(CType(e.Row, TRANSH_FRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRANSH_FRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRANSH_FRowDeleted(Me, New TRANSH_FRowChangeEvent(CType(e.Row, TRANSH_FRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRANSH_FRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRANSH_FRowDeleting(Me, New TRANSH_FRowChangeEvent(CType(e.Row, TRANSH_FRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub RemoveTRANSH_FRow(ByVal row As TRANSH_FRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRANSH_FDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_TRANSHDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_TRANSHRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columncusID As Global.System.Data.DataColumn

        Private columndtCharge As Global.System.Data.DataColumn

        Private columnGRMONTH As Global.System.Data.DataColumn

        Private columnamt As Global.System.Data.DataColumn

        Private columncmt As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        Private columnFullname As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        Private columnTotamt As Global.System.Data.DataColumn

        Private columnvatamt As Global.System.Data.DataColumn

        Private columnbal As Global.System.Data.DataColumn

        Private columnSalerName As Global.System.Data.DataColumn

        Private columnSalerID As Global.System.Data.DataColumn

        Private columnEmpTID As Global.System.Data.DataColumn

        Private columninvTypeDescr As Global.System.Data.DataColumn

        Private columndescription As Global.System.Data.DataColumn

        Private columninvType As Global.System.Data.DataColumn

        Private columnempID As Global.System.Data.DataColumn

        Private columnDebitCost As Global.System.Data.DataColumn

        Private columnDevicesCost As Global.System.Data.DataColumn

        Private columnsalerProfit As Global.System.Data.DataColumn

        Private columnFullTranshDescription As Global.System.Data.DataColumn

        Private columnAreaId As Global.System.Data.DataColumn

        Private columnadrid As Global.System.Data.DataColumn

        Private columncouid As Global.System.Data.DataColumn

        Private columnbenchSalesPrice As Global.System.Data.DataColumn

        Private columnbenchPurchasePrice As Global.System.Data.DataColumn

        Private columnbenchProfit As Global.System.Data.DataColumn

        Private columndtAgreement As Global.System.Data.DataColumn

        Private columnofferCusAcceptance As Global.System.Data.DataColumn

        Private columnwaitingForAgreement As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_TRANSH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cusIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncusID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property dtChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtCharge
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property GRMONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMONTH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property amtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property TotamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property vatamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvatamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property balColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property SalerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalerName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property SalerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property EmpTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpTID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property invTypeDescrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninvTypeDescr
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property descriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescription
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property invTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninvType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property empIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnempID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property DebitCostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDebitCost
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property DevicesCostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDevicesCost
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property salerProfitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalerProfit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FullTranshDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullTranshDescription
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property AreaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property adridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadrid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property couidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncouid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property benchSalesPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbenchSalesPrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property benchPurchasePriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbenchPurchasePrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property benchProfitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbenchProfit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property dtAgreementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtAgreement
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property offerCusAcceptanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnofferCusAcceptance
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property waitingForAgreementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwaitingForAgreement
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_TRANSHRow
            Get
                Return CType(Me.Rows(index), vw_TRANSHRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSHRowChanging As vw_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSHRowChanged As vw_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSHRowDeleting As vw_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSHRowDeleted As vw_TRANSHRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_TRANSHRow(ByVal row As vw_TRANSHRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_TRANSHRow(
                    ByVal ID As System.Guid,
                    ByVal code As Integer,
                    ByVal cusID As System.Guid,
                    ByVal dtCharge As Date,
                    ByVal GRMONTH As String,
                    ByVal amt As Decimal,
                    ByVal cmt As String,
                    ByVal modifiedBy As System.Guid,
                    ByVal modifiedOn As Date,
                    ByVal createdOn As Date,
                    ByVal createdBy As System.Guid,
                    ByVal Fullname As String,
                    ByVal RealName As String,
                    ByVal Totamt As Decimal,
                    ByVal vatamt As Decimal,
                    ByVal bal As Decimal,
                    ByVal SalerName As String,
                    ByVal SalerID As System.Guid,
                    ByVal EmpTID As System.Guid,
                    ByVal invTypeDescr As String,
                    ByVal description As String,
                    ByVal invType As Integer,
                    ByVal empID As System.Guid,
                    ByVal DebitCost As Decimal,
                    ByVal DevicesCost As Decimal,
                    ByVal salerProfit As Decimal,
                    ByVal FullTranshDescription As String,
                    ByVal AreaId As System.Guid,
                    ByVal adrid As System.Guid,
                    ByVal couid As System.Guid,
                    ByVal benchSalesPrice As Decimal,
                    ByVal benchPurchasePrice As Decimal,
                    ByVal benchProfit As Decimal,
                    ByVal dtAgreement As Date,
                    ByVal offerCusAcceptance As Boolean,
                    ByVal waitingForAgreement As Boolean) As vw_TRANSHRow
            Dim rowvw_TRANSHRow As vw_TRANSHRow = CType(Me.NewRow, vw_TRANSHRow)
            Dim columnValuesArray() As Object = New Object() {ID, code, cusID, dtCharge, GRMONTH, amt, cmt, modifiedBy, modifiedOn, createdOn, createdBy, Fullname, RealName, Totamt, vatamt, bal, SalerName, SalerID, EmpTID, invTypeDescr, description, invType, empID, DebitCost, DevicesCost, salerProfit, FullTranshDescription, AreaId, adrid, couid, benchSalesPrice, benchPurchasePrice, benchProfit, dtAgreement, offerCusAcceptance, waitingForAgreement}
            rowvw_TRANSHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_TRANSHRow)
            Return rowvw_TRANSHRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_TRANSHDataTable = CType(MyBase.Clone, vw_TRANSHDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_TRANSHDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columncusID = MyBase.Columns("cusID")
            Me.columndtCharge = MyBase.Columns("dtCharge")
            Me.columnGRMONTH = MyBase.Columns("GRMONTH")
            Me.columnamt = MyBase.Columns("amt")
            Me.columncmt = MyBase.Columns("cmt")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnRealName = MyBase.Columns("RealName")
            Me.columnTotamt = MyBase.Columns("Totamt")
            Me.columnvatamt = MyBase.Columns("vatamt")
            Me.columnbal = MyBase.Columns("bal")
            Me.columnSalerName = MyBase.Columns("SalerName")
            Me.columnSalerID = MyBase.Columns("SalerID")
            Me.columnEmpTID = MyBase.Columns("EmpTID")
            Me.columninvTypeDescr = MyBase.Columns("invTypeDescr")
            Me.columndescription = MyBase.Columns("description")
            Me.columninvType = MyBase.Columns("invType")
            Me.columnempID = MyBase.Columns("empID")
            Me.columnDebitCost = MyBase.Columns("DebitCost")
            Me.columnDevicesCost = MyBase.Columns("DevicesCost")
            Me.columnsalerProfit = MyBase.Columns("salerProfit")
            Me.columnFullTranshDescription = MyBase.Columns("FullTranshDescription")
            Me.columnAreaId = MyBase.Columns("AreaId")
            Me.columnadrid = MyBase.Columns("adrid")
            Me.columncouid = MyBase.Columns("couid")
            Me.columnbenchSalesPrice = MyBase.Columns("benchSalesPrice")
            Me.columnbenchPurchasePrice = MyBase.Columns("benchPurchasePrice")
            Me.columnbenchProfit = MyBase.Columns("benchProfit")
            Me.columndtAgreement = MyBase.Columns("dtAgreement")
            Me.columnofferCusAcceptance = MyBase.Columns("offerCusAcceptance")
            Me.columnwaitingForAgreement = MyBase.Columns("waitingForAgreement")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columncusID = New Global.System.Data.DataColumn("cusID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncusID)
            Me.columndtCharge = New Global.System.Data.DataColumn("dtCharge", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtCharge)
            Me.columnGRMONTH = New Global.System.Data.DataColumn("GRMONTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMONTH)
            Me.columnamt = New Global.System.Data.DataColumn("amt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamt)
            Me.columncmt = New Global.System.Data.DataColumn("cmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmt)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.columnTotamt = New Global.System.Data.DataColumn("Totamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotamt)
            Me.columnvatamt = New Global.System.Data.DataColumn("vatamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvatamt)
            Me.columnbal = New Global.System.Data.DataColumn("bal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbal)
            Me.columnSalerName = New Global.System.Data.DataColumn("SalerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalerName)
            Me.columnSalerID = New Global.System.Data.DataColumn("SalerID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalerID)
            Me.columnEmpTID = New Global.System.Data.DataColumn("EmpTID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpTID)
            Me.columninvTypeDescr = New Global.System.Data.DataColumn("invTypeDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninvTypeDescr)
            Me.columndescription = New Global.System.Data.DataColumn("description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescription)
            Me.columninvType = New Global.System.Data.DataColumn("invType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninvType)
            Me.columnempID = New Global.System.Data.DataColumn("empID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnempID)
            Me.columnDebitCost = New Global.System.Data.DataColumn("DebitCost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDebitCost)
            Me.columnDevicesCost = New Global.System.Data.DataColumn("DevicesCost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDevicesCost)
            Me.columnsalerProfit = New Global.System.Data.DataColumn("salerProfit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalerProfit)
            Me.columnFullTranshDescription = New Global.System.Data.DataColumn("FullTranshDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullTranshDescription)
            Me.columnAreaId = New Global.System.Data.DataColumn("AreaId", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaId)
            Me.columnadrid = New Global.System.Data.DataColumn("adrid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadrid)
            Me.columncouid = New Global.System.Data.DataColumn("couid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncouid)
            Me.columnbenchSalesPrice = New Global.System.Data.DataColumn("benchSalesPrice", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbenchSalesPrice)
            Me.columnbenchPurchasePrice = New Global.System.Data.DataColumn("benchPurchasePrice", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbenchPurchasePrice)
            Me.columnbenchProfit = New Global.System.Data.DataColumn("benchProfit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbenchProfit)
            Me.columndtAgreement = New Global.System.Data.DataColumn("dtAgreement", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtAgreement)
            Me.columnofferCusAcceptance = New Global.System.Data.DataColumn("offerCusAcceptance", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnofferCusAcceptance)
            Me.columnwaitingForAgreement = New Global.System.Data.DataColumn("waitingForAgreement", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwaitingForAgreement)
            Me.columnID.AllowDBNull = False
            Me.columncode.AllowDBNull = False
            Me.columncusID.AllowDBNull = False
            Me.columndtCharge.AllowDBNull = False
            Me.columnGRMONTH.ReadOnly = True
            Me.columnGRMONTH.MaxLength = 50
            Me.columncmt.MaxLength = 2147483647
            Me.columnFullname.AllowDBNull = False
            Me.columnFullname.MaxLength = 200
            Me.columnRealName.MaxLength = 200
            Me.columnSalerName.MaxLength = 200
            Me.columninvTypeDescr.ReadOnly = True
            Me.columninvTypeDescr.MaxLength = 17
            Me.columndescription.MaxLength = 2147483647
            Me.columnFullTranshDescription.ReadOnly = True
            Me.columnFullTranshDescription.MaxLength = 2147483647
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_TRANSHRow() As vw_TRANSHRow
            Return CType(Me.NewRow, vw_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_TRANSHRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_TRANSHRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSHRowChanged(Me, New vw_TRANSHRowChangeEvent(CType(e.Row, vw_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_TRANSHRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSHRowChanging(Me, New vw_TRANSHRowChangeEvent(CType(e.Row, vw_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_TRANSHRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSHRowDeleted(Me, New vw_TRANSHRowChangeEvent(CType(e.Row, vw_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_TRANSHRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSHRowDeleting(Me, New vw_TRANSHRowChangeEvent(CType(e.Row, vw_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_TRANSHRow(ByVal row As vw_TRANSHRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_TRANSHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class CCT_TRANSHDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCT_TRANSHRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columnFullname As Global.System.Data.DataColumn

        Private columnFatherName As Global.System.Data.DataColumn

        Private columnCouID As Global.System.Data.DataColumn

        Private columnAreaID As Global.System.Data.DataColumn

        Private columnAdrID As Global.System.Data.DataColumn

        Private columnSourceID As Global.System.Data.DataColumn

        Private columnSalerID As Global.System.Data.DataColumn

        Private columnDoyID As Global.System.Data.DataColumn

        Private columnPrfID As Global.System.Data.DataColumn

        Private columnphn As Global.System.Data.DataColumn

        Private columnmob As Global.System.Data.DataColumn

        Private columnfax As Global.System.Data.DataColumn

        Private columnemail As Global.System.Data.DataColumn

        Private columnafm As Global.System.Data.DataColumn

        Private columncmt As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "CCT_TRANSH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FatherNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFatherName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property CouIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCouID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property AreaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property AdrIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdrID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property SourceIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property SalerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property DoyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDoyID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property PrfIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrfID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property phnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnphn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property mobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmob
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property afmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnafm
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As CCT_TRANSHRow
            Get
                Return CType(Me.Rows(index), CCT_TRANSHRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event CCT_TRANSHRowChanging As CCT_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event CCT_TRANSHRowChanged As CCT_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event CCT_TRANSHRowDeleting As CCT_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event CCT_TRANSHRowDeleted As CCT_TRANSHRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub AddCCT_TRANSHRow(ByVal row As CCT_TRANSHRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function AddCCT_TRANSHRow(
                    ByVal ID As System.Guid,
                    ByVal Fullname As String,
                    ByVal FatherName As String,
                    ByVal CouID As System.Guid,
                    ByVal AreaID As System.Guid,
                    ByVal AdrID As System.Guid,
                    ByVal SourceID As System.Guid,
                    ByVal SalerID As System.Guid,
                    ByVal DoyID As System.Guid,
                    ByVal PrfID As System.Guid,
                    ByVal phn As String,
                    ByVal mob As String,
                    ByVal fax As String,
                    ByVal email As String,
                    ByVal afm As String,
                    ByVal cmt As String,
                    ByVal modifiedBy As System.Guid,
                    ByVal modifiedOn As Date,
                    ByVal createdOn As Date,
                    ByVal createdBy As System.Guid) As CCT_TRANSHRow
            Dim rowCCT_TRANSHRow As CCT_TRANSHRow = CType(Me.NewRow, CCT_TRANSHRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nothing, Fullname, FatherName, CouID, AreaID, AdrID, SourceID, SalerID, DoyID, PrfID, phn, mob, fax, email, afm, cmt, modifiedBy, modifiedOn, createdOn, createdBy}
            rowCCT_TRANSHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCT_TRANSHRow)
            Return rowCCT_TRANSHRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As CCT_TRANSHRow
            Return CType(Me.Rows.Find(New Object() {ID}), CCT_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCT_TRANSHDataTable = CType(MyBase.Clone, CCT_TRANSHDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCT_TRANSHDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnFatherName = MyBase.Columns("FatherName")
            Me.columnCouID = MyBase.Columns("CouID")
            Me.columnAreaID = MyBase.Columns("AreaID")
            Me.columnAdrID = MyBase.Columns("AdrID")
            Me.columnSourceID = MyBase.Columns("SourceID")
            Me.columnSalerID = MyBase.Columns("SalerID")
            Me.columnDoyID = MyBase.Columns("DoyID")
            Me.columnPrfID = MyBase.Columns("PrfID")
            Me.columnphn = MyBase.Columns("phn")
            Me.columnmob = MyBase.Columns("mob")
            Me.columnfax = MyBase.Columns("fax")
            Me.columnemail = MyBase.Columns("email")
            Me.columnafm = MyBase.Columns("afm")
            Me.columncmt = MyBase.Columns("cmt")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnFatherName = New Global.System.Data.DataColumn("FatherName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFatherName)
            Me.columnCouID = New Global.System.Data.DataColumn("CouID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCouID)
            Me.columnAreaID = New Global.System.Data.DataColumn("AreaID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaID)
            Me.columnAdrID = New Global.System.Data.DataColumn("AdrID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdrID)
            Me.columnSourceID = New Global.System.Data.DataColumn("SourceID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceID)
            Me.columnSalerID = New Global.System.Data.DataColumn("SalerID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalerID)
            Me.columnDoyID = New Global.System.Data.DataColumn("DoyID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDoyID)
            Me.columnPrfID = New Global.System.Data.DataColumn("PrfID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrfID)
            Me.columnphn = New Global.System.Data.DataColumn("phn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphn)
            Me.columnmob = New Global.System.Data.DataColumn("mob", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmob)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnafm = New Global.System.Data.DataColumn("afm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnafm)
            Me.columncmt = New Global.System.Data.DataColumn("cmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmt)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columncode.AutoIncrement = True
            Me.columncode.AutoIncrementSeed = -1
            Me.columncode.AutoIncrementStep = -1
            Me.columncode.AllowDBNull = False
            Me.columncode.ReadOnly = True
            Me.columnFullname.AllowDBNull = False
            Me.columnFullname.MaxLength = 200
            Me.columnFatherName.MaxLength = 100
            Me.columnSourceID.AllowDBNull = False
            Me.columnphn.MaxLength = 50
            Me.columnmob.MaxLength = 50
            Me.columnfax.MaxLength = 50
            Me.columnemail.MaxLength = 50
            Me.columnafm.MaxLength = 11
            Me.columncmt.MaxLength = 2147483647
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function NewCCT_TRANSHRow() As CCT_TRANSHRow
            Return CType(Me.NewRow, CCT_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCT_TRANSHRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCT_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCT_TRANSHRowChangedEvent) Is Nothing) Then
                RaiseEvent CCT_TRANSHRowChanged(Me, New CCT_TRANSHRowChangeEvent(CType(e.Row, CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCT_TRANSHRowChangingEvent) Is Nothing) Then
                RaiseEvent CCT_TRANSHRowChanging(Me, New CCT_TRANSHRowChangeEvent(CType(e.Row, CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCT_TRANSHRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCT_TRANSHRowDeleted(Me, New CCT_TRANSHRowChangeEvent(CType(e.Row, CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCT_TRANSHRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCT_TRANSHRowDeleting(Me, New CCT_TRANSHRowChangeEvent(CType(e.Row, CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub RemoveCCT_TRANSHRow(ByVal row As CCT_TRANSHRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCT_TRANSHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_PAYTYPESDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_PAYTYPESRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columnname As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_PAYTYPES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_PAYTYPESRow
            Get
                Return CType(Me.Rows(index), vw_PAYTYPESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_PAYTYPESRowChanging As vw_PAYTYPESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_PAYTYPESRowChanged As vw_PAYTYPESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_PAYTYPESRowDeleting As vw_PAYTYPESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_PAYTYPESRowDeleted As vw_PAYTYPESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_PAYTYPESRow(ByVal row As vw_PAYTYPESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_PAYTYPESRow(ByVal ID As System.Guid, ByVal code As Integer, ByVal name As String, ByVal modifiedBy As System.Guid, ByVal modifiedOn As Date, ByVal createdOn As Date, ByVal createdBy As System.Guid, ByVal RealName As String) As vw_PAYTYPESRow
            Dim rowvw_PAYTYPESRow As vw_PAYTYPESRow = CType(Me.NewRow, vw_PAYTYPESRow)
            Dim columnValuesArray() As Object = New Object() {ID, code, name, modifiedBy, modifiedOn, createdOn, createdBy, RealName}
            rowvw_PAYTYPESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_PAYTYPESRow)
            Return rowvw_PAYTYPESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As vw_PAYTYPESRow
            Return CType(Me.Rows.Find(New Object() {ID}), vw_PAYTYPESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_PAYTYPESDataTable = CType(MyBase.Clone, vw_PAYTYPESDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_PAYTYPESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columnname = MyBase.Columns("name")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
            Me.columnRealName = MyBase.Columns("RealName")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columncode.AllowDBNull = False
            Me.columnname.AllowDBNull = False
            Me.columnname.MaxLength = 150
            Me.columnRealName.MaxLength = 200
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_PAYTYPESRow() As vw_PAYTYPESRow
            Return CType(Me.NewRow, vw_PAYTYPESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_PAYTYPESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_PAYTYPESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_PAYTYPESRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_PAYTYPESRowChanged(Me, New vw_PAYTYPESRowChangeEvent(CType(e.Row, vw_PAYTYPESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_PAYTYPESRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_PAYTYPESRowChanging(Me, New vw_PAYTYPESRowChangeEvent(CType(e.Row, vw_PAYTYPESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_PAYTYPESRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_PAYTYPESRowDeleted(Me, New vw_PAYTYPESRowChangeEvent(CType(e.Row, vw_PAYTYPESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_PAYTYPESRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_PAYTYPESRowDeleting(Me, New vw_PAYTYPESRowChangeEvent(CType(e.Row, vw_PAYTYPESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_PAYTYPESRow(ByVal row As vw_PAYTYPESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_PAYTYPESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_TRANS_EXTRA_CHARGESDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_TRANS_EXTRA_CHARGESRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columnname As Global.System.Data.DataColumn

        Private columnamt As Global.System.Data.DataColumn

        Private columntranshID As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_TRANS_EXTRA_CHARGES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property amtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property transhIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntranshID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_TRANS_EXTRA_CHARGESRow
            Get
                Return CType(Me.Rows(index), vw_TRANS_EXTRA_CHARGESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANS_EXTRA_CHARGESRowChanging As vw_TRANS_EXTRA_CHARGESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANS_EXTRA_CHARGESRowChanged As vw_TRANS_EXTRA_CHARGESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANS_EXTRA_CHARGESRowDeleting As vw_TRANS_EXTRA_CHARGESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANS_EXTRA_CHARGESRowDeleted As vw_TRANS_EXTRA_CHARGESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_TRANS_EXTRA_CHARGESRow(ByVal row As vw_TRANS_EXTRA_CHARGESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_TRANS_EXTRA_CHARGESRow(ByVal ID As System.Guid, ByVal code As Integer, ByVal name As String, ByVal amt As Decimal, ByVal transhID As System.Guid, ByVal modifiedBy As System.Guid, ByVal modifiedOn As Date, ByVal createdOn As Date, ByVal createdBy As System.Guid, ByVal RealName As String) As vw_TRANS_EXTRA_CHARGESRow
            Dim rowvw_TRANS_EXTRA_CHARGESRow As vw_TRANS_EXTRA_CHARGESRow = CType(Me.NewRow, vw_TRANS_EXTRA_CHARGESRow)
            Dim columnValuesArray() As Object = New Object() {ID, code, name, amt, transhID, modifiedBy, modifiedOn, createdOn, createdBy, RealName}
            rowvw_TRANS_EXTRA_CHARGESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_TRANS_EXTRA_CHARGESRow)
            Return rowvw_TRANS_EXTRA_CHARGESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As vw_TRANS_EXTRA_CHARGESRow
            Return CType(Me.Rows.Find(New Object() {ID}), vw_TRANS_EXTRA_CHARGESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_TRANS_EXTRA_CHARGESDataTable = CType(MyBase.Clone, vw_TRANS_EXTRA_CHARGESDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_TRANS_EXTRA_CHARGESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columnname = MyBase.Columns("name")
            Me.columnamt = MyBase.Columns("amt")
            Me.columntranshID = MyBase.Columns("transhID")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
            Me.columnRealName = MyBase.Columns("RealName")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnamt = New Global.System.Data.DataColumn("amt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamt)
            Me.columntranshID = New Global.System.Data.DataColumn("transhID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntranshID)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columncode.AllowDBNull = False
            Me.columnname.AllowDBNull = False
            Me.columnname.MaxLength = 150
            Me.columnamt.AllowDBNull = False
            Me.columntranshID.AllowDBNull = False
            Me.columnmodifiedBy.AllowDBNull = False
            Me.columnRealName.MaxLength = 200
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_TRANS_EXTRA_CHARGESRow() As vw_TRANS_EXTRA_CHARGESRow
            Return CType(Me.NewRow, vw_TRANS_EXTRA_CHARGESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_TRANS_EXTRA_CHARGESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_TRANS_EXTRA_CHARGESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_TRANS_EXTRA_CHARGESRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_TRANS_EXTRA_CHARGESRowChanged(Me, New vw_TRANS_EXTRA_CHARGESRowChangeEvent(CType(e.Row, vw_TRANS_EXTRA_CHARGESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_TRANS_EXTRA_CHARGESRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_TRANS_EXTRA_CHARGESRowChanging(Me, New vw_TRANS_EXTRA_CHARGESRowChangeEvent(CType(e.Row, vw_TRANS_EXTRA_CHARGESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_TRANS_EXTRA_CHARGESRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_TRANS_EXTRA_CHARGESRowDeleted(Me, New vw_TRANS_EXTRA_CHARGESRowChangeEvent(CType(e.Row, vw_TRANS_EXTRA_CHARGESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_TRANS_EXTRA_CHARGESRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_TRANS_EXTRA_CHARGESRowDeleting(Me, New vw_TRANS_EXTRA_CHARGESRowChangeEvent(CType(e.Row, vw_TRANS_EXTRA_CHARGESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_TRANS_EXTRA_CHARGESRow(ByVal row As vw_TRANS_EXTRA_CHARGESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_TRANS_EXTRA_CHARGESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_TRANSD_CreditDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_TRANSD_CreditRow)

        Private columnID As Global.System.Data.DataColumn

        Private columntranshID As Global.System.Data.DataColumn

        Private columnBankName As Global.System.Data.DataColumn

        Private columncash As Global.System.Data.DataColumn

        Private columnamt As Global.System.Data.DataColumn

        Private columncmt As Global.System.Data.DataColumn

        Private columndtPay As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columnbankID As Global.System.Data.DataColumn

        Private columnGRMONTH As Global.System.Data.DataColumn

        Private columnpaid As Global.System.Data.DataColumn

        Private columnPayTypeName As Global.System.Data.DataColumn

        Private columnPayTypeID As Global.System.Data.DataColumn

        Private columndepositor As Global.System.Data.DataColumn

        Private columncctFullname As Global.System.Data.DataColumn

        Private columncusID As Global.System.Data.DataColumn

        Private columnisCredit As Global.System.Data.DataColumn

        Private columncustranshid As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_TRANSD_Credit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property transhIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntranshID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property BankNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cashColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncash
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property amtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property dtPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtPay
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property bankIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbankID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property GRMONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMONTH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property paidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property PayTypeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayTypeName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property PayTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayTypeID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property depositorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepositor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cctFullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncctFullname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cusIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncusID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property isCreditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisCredit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property custranshidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustranshid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_TRANSD_CreditRow
            Get
                Return CType(Me.Rows(index), vw_TRANSD_CreditRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_CreditRowChanging As vw_TRANSD_CreditRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_CreditRowChanged As vw_TRANSD_CreditRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_CreditRowDeleting As vw_TRANSD_CreditRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_CreditRowDeleted As vw_TRANSD_CreditRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_TRANSD_CreditRow(ByVal row As vw_TRANSD_CreditRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_TRANSD_CreditRow(
                    ByVal ID As System.Guid,
                    ByVal transhID As System.Guid,
                    ByVal BankName As String,
                    ByVal cash As Boolean,
                    ByVal amt As Decimal,
                    ByVal cmt As String,
                    ByVal dtPay As Date,
                    ByVal RealName As String,
                    ByVal modifiedOn As Date,
                    ByVal createdOn As Date,
                    ByVal bankID As System.Guid,
                    ByVal GRMONTH As String,
                    ByVal paid As Boolean,
                    ByVal PayTypeName As String,
                    ByVal PayTypeID As System.Guid,
                    ByVal depositor As String,
                    ByVal cctFullname As String,
                    ByVal cusID As System.Guid,
                    ByVal isCredit As Boolean,
                    ByVal custranshid As System.Guid) As vw_TRANSD_CreditRow
            Dim rowvw_TRANSD_CreditRow As vw_TRANSD_CreditRow = CType(Me.NewRow, vw_TRANSD_CreditRow)
            Dim columnValuesArray() As Object = New Object() {ID, transhID, BankName, cash, amt, cmt, dtPay, RealName, modifiedOn, createdOn, bankID, GRMONTH, paid, PayTypeName, PayTypeID, depositor, cctFullname, cusID, isCredit, custranshid}
            rowvw_TRANSD_CreditRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_TRANSD_CreditRow)
            Return rowvw_TRANSD_CreditRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As vw_TRANSD_CreditRow
            Return CType(Me.Rows.Find(New Object() {ID}), vw_TRANSD_CreditRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_TRANSD_CreditDataTable = CType(MyBase.Clone, vw_TRANSD_CreditDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_TRANSD_CreditDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columntranshID = MyBase.Columns("transhID")
            Me.columnBankName = MyBase.Columns("BankName")
            Me.columncash = MyBase.Columns("cash")
            Me.columnamt = MyBase.Columns("amt")
            Me.columncmt = MyBase.Columns("cmt")
            Me.columndtPay = MyBase.Columns("dtPay")
            Me.columnRealName = MyBase.Columns("RealName")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columnbankID = MyBase.Columns("bankID")
            Me.columnGRMONTH = MyBase.Columns("GRMONTH")
            Me.columnpaid = MyBase.Columns("paid")
            Me.columnPayTypeName = MyBase.Columns("PayTypeName")
            Me.columnPayTypeID = MyBase.Columns("PayTypeID")
            Me.columndepositor = MyBase.Columns("depositor")
            Me.columncctFullname = MyBase.Columns("cctFullname")
            Me.columncusID = MyBase.Columns("cusID")
            Me.columnisCredit = MyBase.Columns("isCredit")
            Me.columncustranshid = MyBase.Columns("custranshid")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columntranshID = New Global.System.Data.DataColumn("transhID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntranshID)
            Me.columnBankName = New Global.System.Data.DataColumn("BankName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankName)
            Me.columncash = New Global.System.Data.DataColumn("cash", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncash)
            Me.columnamt = New Global.System.Data.DataColumn("amt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamt)
            Me.columncmt = New Global.System.Data.DataColumn("cmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmt)
            Me.columndtPay = New Global.System.Data.DataColumn("dtPay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtPay)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columnbankID = New Global.System.Data.DataColumn("bankID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbankID)
            Me.columnGRMONTH = New Global.System.Data.DataColumn("GRMONTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMONTH)
            Me.columnpaid = New Global.System.Data.DataColumn("paid", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaid)
            Me.columnPayTypeName = New Global.System.Data.DataColumn("PayTypeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayTypeName)
            Me.columnPayTypeID = New Global.System.Data.DataColumn("PayTypeID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayTypeID)
            Me.columndepositor = New Global.System.Data.DataColumn("depositor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepositor)
            Me.columncctFullname = New Global.System.Data.DataColumn("cctFullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncctFullname)
            Me.columncusID = New Global.System.Data.DataColumn("cusID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncusID)
            Me.columnisCredit = New Global.System.Data.DataColumn("isCredit", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisCredit)
            Me.columncustranshid = New Global.System.Data.DataColumn("custranshid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustranshid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columntranshID.AllowDBNull = False
            Me.columnBankName.MaxLength = 150
            Me.columncash.AllowDBNull = False
            Me.columncmt.MaxLength = 2147483647
            Me.columndtPay.AllowDBNull = False
            Me.columnRealName.MaxLength = 200
            Me.columnGRMONTH.ReadOnly = True
            Me.columnGRMONTH.MaxLength = 50
            Me.columnPayTypeName.MaxLength = 150
            Me.columndepositor.MaxLength = 100
            Me.columncctFullname.MaxLength = 200
            Me.columnisCredit.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_TRANSD_CreditRow() As vw_TRANSD_CreditRow
            Return CType(Me.NewRow, vw_TRANSD_CreditRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_TRANSD_CreditRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_TRANSD_CreditRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_TRANSD_CreditRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_CreditRowChanged(Me, New vw_TRANSD_CreditRowChangeEvent(CType(e.Row, vw_TRANSD_CreditRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_TRANSD_CreditRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_CreditRowChanging(Me, New vw_TRANSD_CreditRowChangeEvent(CType(e.Row, vw_TRANSD_CreditRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_TRANSD_CreditRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_CreditRowDeleted(Me, New vw_TRANSD_CreditRowChangeEvent(CType(e.Row, vw_TRANSD_CreditRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_TRANSD_CreditRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_CreditRowDeleting(Me, New vw_TRANSD_CreditRowChangeEvent(CType(e.Row, vw_TRANSD_CreditRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_TRANSD_CreditRow(ByVal row As vw_TRANSD_CreditRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_TRANSD_CreditDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class vw_TRANSD_DebitDataTable
        Inherits Global.System.Data.TypedTableBase(Of vw_TRANSD_DebitRow)

        Private columnID As Global.System.Data.DataColumn

        Private columntranshID As Global.System.Data.DataColumn

        Private columnamt As Global.System.Data.DataColumn

        Private columndtPay As Global.System.Data.DataColumn

        Private columnRealName As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncctFullname As Global.System.Data.DataColumn

        Private columncusID As Global.System.Data.DataColumn

        Private columnisCredit As Global.System.Data.DataColumn

        Private columncustranshid As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "vw_TRANSD_Debit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property transhIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntranshID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property amtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property dtPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtPay
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property RealNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRealName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cctFullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncctFullname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cusIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncusID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property isCreditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisCredit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property custranshidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustranshid
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As vw_TRANSD_DebitRow
            Get
                Return CType(Me.Rows(index), vw_TRANSD_DebitRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_DebitRowChanging As vw_TRANSD_DebitRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_DebitRowChanged As vw_TRANSD_DebitRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_DebitRowDeleting As vw_TRANSD_DebitRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event vw_TRANSD_DebitRowDeleted As vw_TRANSD_DebitRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub Addvw_TRANSD_DebitRow(ByVal row As vw_TRANSD_DebitRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function Addvw_TRANSD_DebitRow(ByVal ID As System.Guid, ByVal transhID As System.Guid, ByVal amt As Decimal, ByVal dtPay As Date, ByVal RealName As String, ByVal modifiedOn As Date, ByVal createdOn As Date, ByVal cctFullname As String, ByVal cusID As System.Guid, ByVal isCredit As Boolean, ByVal custranshid As System.Guid) As vw_TRANSD_DebitRow
            Dim rowvw_TRANSD_DebitRow As vw_TRANSD_DebitRow = CType(Me.NewRow, vw_TRANSD_DebitRow)
            Dim columnValuesArray() As Object = New Object() {ID, transhID, amt, dtPay, RealName, modifiedOn, createdOn, cctFullname, cusID, isCredit, custranshid}
            rowvw_TRANSD_DebitRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvw_TRANSD_DebitRow)
            Return rowvw_TRANSD_DebitRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As vw_TRANSD_DebitRow
            Return CType(Me.Rows.Find(New Object() {ID}), vw_TRANSD_DebitRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vw_TRANSD_DebitDataTable = CType(MyBase.Clone, vw_TRANSD_DebitDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vw_TRANSD_DebitDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columntranshID = MyBase.Columns("transhID")
            Me.columnamt = MyBase.Columns("amt")
            Me.columndtPay = MyBase.Columns("dtPay")
            Me.columnRealName = MyBase.Columns("RealName")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncctFullname = MyBase.Columns("cctFullname")
            Me.columncusID = MyBase.Columns("cusID")
            Me.columnisCredit = MyBase.Columns("isCredit")
            Me.columncustranshid = MyBase.Columns("custranshid")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columntranshID = New Global.System.Data.DataColumn("transhID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntranshID)
            Me.columnamt = New Global.System.Data.DataColumn("amt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamt)
            Me.columndtPay = New Global.System.Data.DataColumn("dtPay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtPay)
            Me.columnRealName = New Global.System.Data.DataColumn("RealName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRealName)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncctFullname = New Global.System.Data.DataColumn("cctFullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncctFullname)
            Me.columncusID = New Global.System.Data.DataColumn("cusID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncusID)
            Me.columnisCredit = New Global.System.Data.DataColumn("isCredit", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisCredit)
            Me.columncustranshid = New Global.System.Data.DataColumn("custranshid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustranshid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columntranshID.AllowDBNull = False
            Me.columndtPay.AllowDBNull = False
            Me.columnRealName.MaxLength = 200
            Me.columncctFullname.MaxLength = 200
            Me.columnisCredit.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function Newvw_TRANSD_DebitRow() As vw_TRANSD_DebitRow
            Return CType(Me.NewRow, vw_TRANSD_DebitRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vw_TRANSD_DebitRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vw_TRANSD_DebitRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_TRANSD_DebitRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_DebitRowChanged(Me, New vw_TRANSD_DebitRowChangeEvent(CType(e.Row, vw_TRANSD_DebitRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_TRANSD_DebitRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_DebitRowChanging(Me, New vw_TRANSD_DebitRowChangeEvent(CType(e.Row, vw_TRANSD_DebitRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_TRANSD_DebitRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_DebitRowDeleted(Me, New vw_TRANSD_DebitRowChangeEvent(CType(e.Row, vw_TRANSD_DebitRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_TRANSD_DebitRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_TRANSD_DebitRowDeleting(Me, New vw_TRANSD_DebitRowChangeEvent(CType(e.Row, vw_TRANSD_DebitRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub Removevw_TRANSD_DebitRow(ByVal row As vw_TRANSD_DebitRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vw_TRANSD_DebitDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
    Partial Public Class COMP_CCT_TRANSHDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMP_CCT_TRANSHRow)

        Private columnID As Global.System.Data.DataColumn

        Private columncode As Global.System.Data.DataColumn

        Private columnFullname As Global.System.Data.DataColumn

        Private columnFatherName As Global.System.Data.DataColumn

        Private columnCouID As Global.System.Data.DataColumn

        Private columnAreaID As Global.System.Data.DataColumn

        Private columnAdrID As Global.System.Data.DataColumn

        Private columnSourceID As Global.System.Data.DataColumn

        Private columnSalerID As Global.System.Data.DataColumn

        Private columnDoyID As Global.System.Data.DataColumn

        Private columnPrfID As Global.System.Data.DataColumn

        Private columnphn As Global.System.Data.DataColumn

        Private columnmob As Global.System.Data.DataColumn

        Private columnfax As Global.System.Data.DataColumn

        Private columnemail As Global.System.Data.DataColumn

        Private columnafm As Global.System.Data.DataColumn

        Private columncmt As Global.System.Data.DataColumn

        Private columnmodifiedBy As Global.System.Data.DataColumn

        Private columnmodifiedOn As Global.System.Data.DataColumn

        Private columncreatedOn As Global.System.Data.DataColumn

        Private columncreatedBy As Global.System.Data.DataColumn

        Private columnisCompany As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.TableName = "COMP_CCT_TRANSH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullname
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property FatherNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFatherName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property CouIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCouID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property AreaIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property AdrIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdrID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property SourceIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property SalerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property DoyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDoyID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property PrfIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrfID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property phnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnphn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property mobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmob
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property afmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnafm
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property cmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property modifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodifiedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedOn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property createdByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property isCompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisCompany
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Default Public ReadOnly Property Item(ByVal index As Integer) As COMP_CCT_TRANSHRow
            Get
                Return CType(Me.Rows(index), COMP_CCT_TRANSHRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event COMP_CCT_TRANSHRowChanging As COMP_CCT_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event COMP_CCT_TRANSHRowChanged As COMP_CCT_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event COMP_CCT_TRANSHRowDeleting As COMP_CCT_TRANSHRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Event COMP_CCT_TRANSHRowDeleted As COMP_CCT_TRANSHRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Sub AddCOMP_CCT_TRANSHRow(ByVal row As COMP_CCT_TRANSHRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overloads Function AddCOMP_CCT_TRANSHRow(
                    ByVal ID As System.Guid,
                    ByVal Fullname As String,
                    ByVal FatherName As String,
                    ByVal CouID As System.Guid,
                    ByVal AreaID As System.Guid,
                    ByVal AdrID As System.Guid,
                    ByVal SourceID As System.Guid,
                    ByVal SalerID As System.Guid,
                    ByVal DoyID As System.Guid,
                    ByVal PrfID As System.Guid,
                    ByVal phn As String,
                    ByVal mob As String,
                    ByVal fax As String,
                    ByVal email As String,
                    ByVal afm As String,
                    ByVal cmt As String,
                    ByVal modifiedBy As System.Guid,
                    ByVal modifiedOn As Date,
                    ByVal createdOn As Date,
                    ByVal createdBy As System.Guid,
                    ByVal isCompany As Boolean) As COMP_CCT_TRANSHRow
            Dim rowCOMP_CCT_TRANSHRow As COMP_CCT_TRANSHRow = CType(Me.NewRow, COMP_CCT_TRANSHRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nothing, Fullname, FatherName, CouID, AreaID, AdrID, SourceID, SalerID, DoyID, PrfID, phn, mob, fax, email, afm, cmt, modifiedBy, modifiedOn, createdOn, createdBy, isCompany}
            rowCOMP_CCT_TRANSHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMP_CCT_TRANSHRow)
            Return rowCOMP_CCT_TRANSHRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function FindByID(ByVal ID As System.Guid) As COMP_CCT_TRANSHRow
            Return CType(Me.Rows.Find(New Object() {ID}), COMP_CCT_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMP_CCT_TRANSHDataTable = CType(MyBase.Clone, COMP_CCT_TRANSHDataTable)
            cln.InitVars
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMP_CCT_TRANSHDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columncode = MyBase.Columns("code")
            Me.columnFullname = MyBase.Columns("Fullname")
            Me.columnFatherName = MyBase.Columns("FatherName")
            Me.columnCouID = MyBase.Columns("CouID")
            Me.columnAreaID = MyBase.Columns("AreaID")
            Me.columnAdrID = MyBase.Columns("AdrID")
            Me.columnSourceID = MyBase.Columns("SourceID")
            Me.columnSalerID = MyBase.Columns("SalerID")
            Me.columnDoyID = MyBase.Columns("DoyID")
            Me.columnPrfID = MyBase.Columns("PrfID")
            Me.columnphn = MyBase.Columns("phn")
            Me.columnmob = MyBase.Columns("mob")
            Me.columnfax = MyBase.Columns("fax")
            Me.columnemail = MyBase.Columns("email")
            Me.columnafm = MyBase.Columns("afm")
            Me.columncmt = MyBase.Columns("cmt")
            Me.columnmodifiedBy = MyBase.Columns("modifiedBy")
            Me.columnmodifiedOn = MyBase.Columns("modifiedOn")
            Me.columncreatedOn = MyBase.Columns("createdOn")
            Me.columncreatedBy = MyBase.Columns("createdBy")
            Me.columnisCompany = MyBase.Columns("isCompany")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnFullname = New Global.System.Data.DataColumn("Fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullname)
            Me.columnFatherName = New Global.System.Data.DataColumn("FatherName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFatherName)
            Me.columnCouID = New Global.System.Data.DataColumn("CouID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCouID)
            Me.columnAreaID = New Global.System.Data.DataColumn("AreaID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaID)
            Me.columnAdrID = New Global.System.Data.DataColumn("AdrID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdrID)
            Me.columnSourceID = New Global.System.Data.DataColumn("SourceID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceID)
            Me.columnSalerID = New Global.System.Data.DataColumn("SalerID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalerID)
            Me.columnDoyID = New Global.System.Data.DataColumn("DoyID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDoyID)
            Me.columnPrfID = New Global.System.Data.DataColumn("PrfID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrfID)
            Me.columnphn = New Global.System.Data.DataColumn("phn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphn)
            Me.columnmob = New Global.System.Data.DataColumn("mob", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmob)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnafm = New Global.System.Data.DataColumn("afm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnafm)
            Me.columncmt = New Global.System.Data.DataColumn("cmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmt)
            Me.columnmodifiedBy = New Global.System.Data.DataColumn("modifiedBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedBy)
            Me.columnmodifiedOn = New Global.System.Data.DataColumn("modifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodifiedOn)
            Me.columncreatedOn = New Global.System.Data.DataColumn("createdOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedOn)
            Me.columncreatedBy = New Global.System.Data.DataColumn("createdBy", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedBy)
            Me.columnisCompany = New Global.System.Data.DataColumn("isCompany", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisCompany)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, True))
            Me.columnID.AllowDBNull = False
            Me.columnID.Unique = True
            Me.columncode.AutoIncrement = True
            Me.columncode.AutoIncrementSeed = -1
            Me.columncode.AutoIncrementStep = -1
            Me.columncode.AllowDBNull = False
            Me.columncode.ReadOnly = True
            Me.columnFullname.AllowDBNull = False
            Me.columnFullname.MaxLength = 200
            Me.columnFatherName.MaxLength = 100
            Me.columnSourceID.AllowDBNull = False
            Me.columnphn.MaxLength = 50
            Me.columnmob.MaxLength = 50
            Me.columnfax.MaxLength = 50
            Me.columnemail.MaxLength = 50
            Me.columnafm.MaxLength = 11
            Me.columncmt.MaxLength = 2147483647
            Me.columnisCompany.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function NewCOMP_CCT_TRANSHRow() As COMP_CCT_TRANSHRow
            Return CType(Me.NewRow, COMP_CCT_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMP_CCT_TRANSHRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMP_CCT_TRANSHRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMP_CCT_TRANSHRowChangedEvent) Is Nothing) Then
                RaiseEvent COMP_CCT_TRANSHRowChanged(Me, New COMP_CCT_TRANSHRowChangeEvent(CType(e.Row, COMP_CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMP_CCT_TRANSHRowChangingEvent) Is Nothing) Then
                RaiseEvent COMP_CCT_TRANSHRowChanging(Me, New COMP_CCT_TRANSHRowChangeEvent(CType(e.Row, COMP_CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMP_CCT_TRANSHRowDeletedEvent) Is Nothing) Then
                RaiseEvent COMP_CCT_TRANSHRowDeleted(Me, New COMP_CCT_TRANSHRowChangeEvent(CType(e.Row, COMP_CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMP_CCT_TRANSHRowDeletingEvent) Is Nothing) Then
                RaiseEvent COMP_CCT_TRANSHRowDeleting(Me, New COMP_CCT_TRANSHRowChangeEvent(CType(e.Row, COMP_CCT_TRANSHRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub RemoveCOMP_CCT_TRANSHRow(ByVal row As COMP_CCT_TRANSHRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DM_TRANS = New DM_TRANS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMP_CCT_TRANSHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_TRANSH_CRow
        Inherits Global.System.Data.DataRow

        Private tablevw_TRANSH_C As vw_TRANSH_CDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_TRANSH_C = CType(Me.Table, vw_TRANSH_CDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSH_C.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tablevw_TRANSH_C.codeColumn), Integer)
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property name() As String
            Get
                Return CType(Me(Me.tablevw_TRANSH_C.nameColumn), String)
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.nameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH_C.modifiedByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedBy' in table 'vw_TRANSH_C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH_C.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_TRANSH_C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH_C.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_TRANSH_C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH_C.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'vw_TRANSH_C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH_C.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_TRANSH_C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH_C.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH_C.modifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedByNull()
            Me(Me.tablevw_TRANSH_C.modifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH_C.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_TRANSH_C.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH_C.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_TRANSH_C.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH_C.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tablevw_TRANSH_C.createdByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH_C.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_TRANSH_C.RealNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_TRANSDRow
        Inherits Global.System.Data.DataRow

        Private tablevw_TRANSD As vw_TRANSDDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_TRANSD = CType(Me.Table, vw_TRANSDDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSD.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSD.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property transhID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSD.transhIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSD.transhIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property BankName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.BankNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankName' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.BankNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cash() As Boolean
            Get
                Return CType(Me(Me.tablevw_TRANSD.cashColumn), Boolean)
            End Get
            Set
                Me(Me.tablevw_TRANSD.cashColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property amt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.amtColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amt' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.amtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cmt() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.cmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmt' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.cmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property dtPay() As Date
            Get
                Return CType(Me(Me.tablevw_TRANSD.dtPayColumn), Date)
            End Get
            Set
                Me(Me.tablevw_TRANSD.dtPayColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property bankID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.bankIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bankID' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.bankIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property GRMONTH() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.GRMONTHColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRMONTH' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.GRMONTHColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property paid() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.paidColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paid' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.paidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property PayTypeName() As String
            Get
                Return CType(Me(Me.tablevw_TRANSD.PayTypeNameColumn), String)
            End Get
            Set
                Me(Me.tablevw_TRANSD.PayTypeNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property PayTypeID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.PayTypeIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayTypeID' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.PayTypeIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property depositor() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.depositorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'depositor' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.depositorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cctFullname() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.cctFullnameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cctFullname' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.cctFullnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cusID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD.cusIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cusID' in table 'vw_TRANSD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD.cusIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property isCredit() As Boolean
            Get
                Return CType(Me(Me.tablevw_TRANSD.isCreditColumn), Boolean)
            End Get
            Set
                Me(Me.tablevw_TRANSD.isCreditColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsBankNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.BankNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetBankNameNull()
            Me(Me.tablevw_TRANSD.BankNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsamtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.amtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetamtNull()
            Me(Me.tablevw_TRANSD.amtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscmtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.cmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcmtNull()
            Me(Me.tablevw_TRANSD.cmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_TRANSD.RealNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_TRANSD.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_TRANSD.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbankIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.bankIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbankIDNull()
            Me(Me.tablevw_TRANSD.bankIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsGRMONTHNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.GRMONTHColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetGRMONTHNull()
            Me(Me.tablevw_TRANSD.GRMONTHColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IspaidNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.paidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetpaidNull()
            Me(Me.tablevw_TRANSD.paidColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsPayTypeIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.PayTypeIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetPayTypeIDNull()
            Me(Me.tablevw_TRANSD.PayTypeIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsdepositorNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.depositorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetdepositorNull()
            Me(Me.tablevw_TRANSD.depositorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscctFullnameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.cctFullnameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcctFullnameNull()
            Me(Me.tablevw_TRANSD.cctFullnameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscusIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD.cusIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcusIDNull()
            Me(Me.tablevw_TRANSD.cusIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRANSH_FRow
        Inherits Global.System.Data.DataRow

        Private tableTRANSH_F As TRANSH_FDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRANSH_F = CType(Me.Table, TRANSH_FDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableTRANSH_F.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tableTRANSH_F.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tableTRANSH_F.codeColumn), Integer)
            End Get
            Set
                Me(Me.tableTRANSH_F.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property transhID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.transhIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'transhID' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.transhIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property filename() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.filenameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'filename' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.filenameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property comefrom() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.comefromColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comefrom' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.comefromColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property extension() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.extensionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'extension' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.extensionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.modifiedByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedBy' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property FileCategory() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.FileCategoryColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FileCategory' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.FileCategoryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property fileCatID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.fileCatIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fileCatID' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.fileCatIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ownerID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.ownerIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ownerID' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.ownerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property belongsTo() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSH_F.belongsToColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'belongsTo' in table 'TRANSH_F' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRANSH_F.belongsToColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IstranshIDNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.transhIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SettranshIDNull()
            Me(Me.tableTRANSH_F.transhIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsfilenameNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.filenameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetfilenameNull()
            Me(Me.tableTRANSH_F.filenameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscomefromNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.comefromColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcomefromNull()
            Me(Me.tableTRANSH_F.comefromColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsextensionNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.extensionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetextensionNull()
            Me(Me.tableTRANSH_F.extensionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedByNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.modifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedByNull()
            Me(Me.tableTRANSH_F.modifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tableTRANSH_F.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tableTRANSH_F.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tableTRANSH_F.createdByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsFileCategoryNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.FileCategoryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetFileCategoryNull()
            Me(Me.tableTRANSH_F.FileCategoryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsfileCatIDNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.fileCatIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetfileCatIDNull()
            Me(Me.tableTRANSH_F.fileCatIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsownerIDNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.ownerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetownerIDNull()
            Me(Me.tableTRANSH_F.ownerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbelongsToNull() As Boolean
            Return Me.IsNull(Me.tableTRANSH_F.belongsToColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbelongsToNull()
            Me(Me.tableTRANSH_F.belongsToColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_TRANSHRow
        Inherits Global.System.Data.DataRow

        Private tablevw_TRANSH As vw_TRANSHDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_TRANSH = CType(Me.Table, vw_TRANSHDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSH.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSH.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tablevw_TRANSH.codeColumn), Integer)
            End Get
            Set
                Me(Me.tablevw_TRANSH.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cusID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSH.cusIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSH.cusIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property dtCharge() As Date
            Get
                Return CType(Me(Me.tablevw_TRANSH.dtChargeColumn), Date)
            End Get
            Set
                Me(Me.tablevw_TRANSH.dtChargeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property GRMONTH() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.GRMONTHColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRMONTH' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.GRMONTHColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property amt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.amtColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amt' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.amtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cmt() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.cmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmt' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.cmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.modifiedByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedBy' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property Fullname() As String
            Get
                Return CType(Me(Me.tablevw_TRANSH.FullnameColumn), String)
            End Get
            Set
                Me(Me.tablevw_TRANSH.FullnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property Totamt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.TotamtColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Totamt' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.TotamtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property vatamt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.vatamtColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vatamt' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.vatamtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property bal() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.balColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bal' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.balColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property SalerName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.SalerNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalerName' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.SalerNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property SalerID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.SalerIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalerID' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.SalerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property EmpTID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.EmpTIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmpTID' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.EmpTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property invTypeDescr() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.invTypeDescrColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'invTypeDescr' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.invTypeDescrColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property description() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.descriptionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'description' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.descriptionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property invType() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.invTypeColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'invType' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.invTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property empID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.empIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'empID' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.empIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property DebitCost() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.DebitCostColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DebitCost' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.DebitCostColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property DevicesCost() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.DevicesCostColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DevicesCost' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.DevicesCostColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property salerProfit() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.salerProfitColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'salerProfit' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.salerProfitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property FullTranshDescription() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.FullTranshDescriptionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullTranshDescription' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.FullTranshDescriptionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property AreaId() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.AreaIdColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaId' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.AreaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property adrid() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.adridColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adrid' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.adridColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property couid() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.couidColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'couid' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.couidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property benchSalesPrice() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.benchSalesPriceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'benchSalesPrice' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.benchSalesPriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property benchPurchasePrice() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.benchPurchasePriceColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'benchPurchasePrice' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.benchPurchasePriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property benchProfit() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.benchProfitColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'benchProfit' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.benchProfitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property dtAgreement() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.dtAgreementColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtAgreement' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.dtAgreementColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property offerCusAcceptance() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.offerCusAcceptanceColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'offerCusAcceptance' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.offerCusAcceptanceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property waitingForAgreement() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSH.waitingForAgreementColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'waitingForAgreement' in table 'vw_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSH.waitingForAgreementColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsGRMONTHNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.GRMONTHColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetGRMONTHNull()
            Me(Me.tablevw_TRANSH.GRMONTHColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsamtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.amtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetamtNull()
            Me(Me.tablevw_TRANSH.amtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscmtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.cmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcmtNull()
            Me(Me.tablevw_TRANSH.cmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.modifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedByNull()
            Me(Me.tablevw_TRANSH.modifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_TRANSH.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_TRANSH.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tablevw_TRANSH.createdByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_TRANSH.RealNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsTotamtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.TotamtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetTotamtNull()
            Me(Me.tablevw_TRANSH.TotamtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsvatamtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.vatamtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetvatamtNull()
            Me(Me.tablevw_TRANSH.vatamtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbalNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.balColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbalNull()
            Me(Me.tablevw_TRANSH.balColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsSalerNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.SalerNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetSalerNameNull()
            Me(Me.tablevw_TRANSH.SalerNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsSalerIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.SalerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetSalerIDNull()
            Me(Me.tablevw_TRANSH.SalerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsEmpTIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.EmpTIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetEmpTIDNull()
            Me(Me.tablevw_TRANSH.EmpTIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsinvTypeDescrNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.invTypeDescrColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetinvTypeDescrNull()
            Me(Me.tablevw_TRANSH.invTypeDescrColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsdescriptionNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.descriptionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetdescriptionNull()
            Me(Me.tablevw_TRANSH.descriptionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsinvTypeNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.invTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetinvTypeNull()
            Me(Me.tablevw_TRANSH.invTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsempIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.empIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetempIDNull()
            Me(Me.tablevw_TRANSH.empIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsDebitCostNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.DebitCostColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetDebitCostNull()
            Me(Me.tablevw_TRANSH.DebitCostColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsDevicesCostNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.DevicesCostColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetDevicesCostNull()
            Me(Me.tablevw_TRANSH.DevicesCostColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IssalerProfitNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.salerProfitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetsalerProfitNull()
            Me(Me.tablevw_TRANSH.salerProfitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsFullTranshDescriptionNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.FullTranshDescriptionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetFullTranshDescriptionNull()
            Me(Me.tablevw_TRANSH.FullTranshDescriptionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsAreaIdNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.AreaIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetAreaIdNull()
            Me(Me.tablevw_TRANSH.AreaIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsadridNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.adridColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetadridNull()
            Me(Me.tablevw_TRANSH.adridColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscouidNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.couidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcouidNull()
            Me(Me.tablevw_TRANSH.couidColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbenchSalesPriceNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.benchSalesPriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbenchSalesPriceNull()
            Me(Me.tablevw_TRANSH.benchSalesPriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbenchPurchasePriceNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.benchPurchasePriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbenchPurchasePriceNull()
            Me(Me.tablevw_TRANSH.benchPurchasePriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbenchProfitNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.benchProfitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbenchProfitNull()
            Me(Me.tablevw_TRANSH.benchProfitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsdtAgreementNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.dtAgreementColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetdtAgreementNull()
            Me(Me.tablevw_TRANSH.dtAgreementColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsofferCusAcceptanceNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.offerCusAcceptanceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetofferCusAcceptanceNull()
            Me(Me.tablevw_TRANSH.offerCusAcceptanceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IswaitingForAgreementNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSH.waitingForAgreementColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetwaitingForAgreementNull()
            Me(Me.tablevw_TRANSH.waitingForAgreementColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCT_TRANSHRow
        Inherits Global.System.Data.DataRow

        Private tableCCT_TRANSH As CCT_TRANSHDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCT_TRANSH = CType(Me.Table, CCT_TRANSHDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableCCT_TRANSH.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tableCCT_TRANSH.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tableCCT_TRANSH.codeColumn), Integer)
            End Get
            Set
                Me(Me.tableCCT_TRANSH.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property Fullname() As String
            Get
                Return CType(Me(Me.tableCCT_TRANSH.FullnameColumn), String)
            End Get
            Set
                Me(Me.tableCCT_TRANSH.FullnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property FatherName() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.FatherNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FatherName' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.FatherNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property CouID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.CouIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CouID' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.CouIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property AreaID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.AreaIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaID' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.AreaIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property AdrID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.AdrIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdrID' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.AdrIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property SourceID() As System.Guid
            Get
                Return CType(Me(Me.tableCCT_TRANSH.SourceIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tableCCT_TRANSH.SourceIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property SalerID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.SalerIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalerID' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.SalerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property DoyID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.DoyIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DoyID' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.DoyIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property PrfID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.PrfIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrfID' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.PrfIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property phn() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.phnColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'phn' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.phnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property mob() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.mobColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mob' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.mobColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property fax() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.faxColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fax' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.faxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property email() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.emailColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.emailColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property afm() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.afmColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'afm' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.afmColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cmt() As String
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.cmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmt' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.cmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.modifiedByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedBy' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCCT_TRANSH.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCT_TRANSH.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsFatherNameNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.FatherNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetFatherNameNull()
            Me(Me.tableCCT_TRANSH.FatherNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsCouIDNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.CouIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetCouIDNull()
            Me(Me.tableCCT_TRANSH.CouIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsAreaIDNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.AreaIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetAreaIDNull()
            Me(Me.tableCCT_TRANSH.AreaIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsAdrIDNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.AdrIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetAdrIDNull()
            Me(Me.tableCCT_TRANSH.AdrIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsSalerIDNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.SalerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetSalerIDNull()
            Me(Me.tableCCT_TRANSH.SalerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsDoyIDNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.DoyIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetDoyIDNull()
            Me(Me.tableCCT_TRANSH.DoyIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsPrfIDNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.PrfIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetPrfIDNull()
            Me(Me.tableCCT_TRANSH.PrfIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsphnNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.phnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetphnNull()
            Me(Me.tableCCT_TRANSH.phnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmobNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.mobColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmobNull()
            Me(Me.tableCCT_TRANSH.mobColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsfaxNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.faxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetfaxNull()
            Me(Me.tableCCT_TRANSH.faxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.emailColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetemailNull()
            Me(Me.tableCCT_TRANSH.emailColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsafmNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.afmColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetafmNull()
            Me(Me.tableCCT_TRANSH.afmColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscmtNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.cmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcmtNull()
            Me(Me.tableCCT_TRANSH.cmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedByNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.modifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedByNull()
            Me(Me.tableCCT_TRANSH.modifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tableCCT_TRANSH.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tableCCT_TRANSH.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tableCCT_TRANSH.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tableCCT_TRANSH.createdByColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_PAYTYPESRow
        Inherits Global.System.Data.DataRow

        Private tablevw_PAYTYPES As vw_PAYTYPESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_PAYTYPES = CType(Me.Table, vw_PAYTYPESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_PAYTYPES.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tablevw_PAYTYPES.codeColumn), Integer)
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property name() As String
            Get
                Return CType(Me(Me.tablevw_PAYTYPES.nameColumn), String)
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.nameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_PAYTYPES.modifiedByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedBy' in table 'vw_PAYTYPES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_PAYTYPES.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_PAYTYPES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_PAYTYPES.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_PAYTYPES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_PAYTYPES.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'vw_PAYTYPES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_PAYTYPES.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_PAYTYPES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_PAYTYPES.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_PAYTYPES.modifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedByNull()
            Me(Me.tablevw_PAYTYPES.modifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_PAYTYPES.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_PAYTYPES.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_PAYTYPES.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_PAYTYPES.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_PAYTYPES.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tablevw_PAYTYPES.createdByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_PAYTYPES.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_PAYTYPES.RealNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_TRANS_EXTRA_CHARGESRow
        Inherits Global.System.Data.DataRow

        Private tablevw_TRANS_EXTRA_CHARGES As vw_TRANS_EXTRA_CHARGESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_TRANS_EXTRA_CHARGES = CType(Me.Table, vw_TRANS_EXTRA_CHARGESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.codeColumn), Integer)
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property name() As String
            Get
                Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.nameColumn), String)
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.nameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property amt() As Decimal
            Get
                Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.amtColumn), Decimal)
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.amtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property transhID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.transhIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.transhIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.modifiedByColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_TRANS_EXTRA_CHARGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_TRANS_EXTRA_CHARGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'vw_TRANS_EXTRA_CHARGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANS_EXTRA_CHARGES.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_TRANS_EXTRA_CHARGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANS_EXTRA_CHARGES.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANS_EXTRA_CHARGES.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_TRANS_EXTRA_CHARGES.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANS_EXTRA_CHARGES.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_TRANS_EXTRA_CHARGES.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANS_EXTRA_CHARGES.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tablevw_TRANS_EXTRA_CHARGES.createdByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANS_EXTRA_CHARGES.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_TRANS_EXTRA_CHARGES.RealNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_TRANSD_CreditRow
        Inherits Global.System.Data.DataRow

        Private tablevw_TRANSD_Credit As vw_TRANSD_CreditDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_TRANSD_Credit = CType(Me.Table, vw_TRANSD_CreditDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSD_Credit.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property transhID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSD_Credit.transhIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.transhIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property BankName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.BankNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankName' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.BankNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cash() As Boolean
            Get
                Return CType(Me(Me.tablevw_TRANSD_Credit.cashColumn), Boolean)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.cashColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property amt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.amtColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amt' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.amtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cmt() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.cmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmt' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.cmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property dtPay() As Date
            Get
                Return CType(Me(Me.tablevw_TRANSD_Credit.dtPayColumn), Date)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.dtPayColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property bankID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.bankIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bankID' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.bankIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property GRMONTH() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.GRMONTHColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRMONTH' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.GRMONTHColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property paid() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.paidColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paid' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.paidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property PayTypeName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.PayTypeNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayTypeName' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.PayTypeNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property PayTypeID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.PayTypeIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayTypeID' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.PayTypeIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property depositor() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.depositorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'depositor' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.depositorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cctFullname() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.cctFullnameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cctFullname' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.cctFullnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cusID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.cusIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cusID' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.cusIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property isCredit() As Boolean
            Get
                Return CType(Me(Me.tablevw_TRANSD_Credit.isCreditColumn), Boolean)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.isCreditColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property custranshid() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Credit.custranshidColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'custranshid' in table 'vw_TRANSD_Credit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Credit.custranshidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsBankNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.BankNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetBankNameNull()
            Me(Me.tablevw_TRANSD_Credit.BankNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsamtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.amtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetamtNull()
            Me(Me.tablevw_TRANSD_Credit.amtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscmtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.cmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcmtNull()
            Me(Me.tablevw_TRANSD_Credit.cmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_TRANSD_Credit.RealNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_TRANSD_Credit.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_TRANSD_Credit.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsbankIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.bankIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetbankIDNull()
            Me(Me.tablevw_TRANSD_Credit.bankIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsGRMONTHNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.GRMONTHColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetGRMONTHNull()
            Me(Me.tablevw_TRANSD_Credit.GRMONTHColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IspaidNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.paidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetpaidNull()
            Me(Me.tablevw_TRANSD_Credit.paidColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsPayTypeNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.PayTypeNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetPayTypeNameNull()
            Me(Me.tablevw_TRANSD_Credit.PayTypeNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsPayTypeIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.PayTypeIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetPayTypeIDNull()
            Me(Me.tablevw_TRANSD_Credit.PayTypeIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsdepositorNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.depositorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetdepositorNull()
            Me(Me.tablevw_TRANSD_Credit.depositorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscctFullnameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.cctFullnameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcctFullnameNull()
            Me(Me.tablevw_TRANSD_Credit.cctFullnameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscusIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.cusIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcusIDNull()
            Me(Me.tablevw_TRANSD_Credit.cusIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscustranshidNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Credit.custranshidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcustranshidNull()
            Me(Me.tablevw_TRANSD_Credit.custranshidColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vw_TRANSD_DebitRow
        Inherits Global.System.Data.DataRow

        Private tablevw_TRANSD_Debit As vw_TRANSD_DebitDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_TRANSD_Debit = CType(Me.Table, vw_TRANSD_DebitDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSD_Debit.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property transhID() As System.Guid
            Get
                Return CType(Me(Me.tablevw_TRANSD_Debit.transhIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.transhIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property amt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.amtColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amt' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.amtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property dtPay() As Date
            Get
                Return CType(Me(Me.tablevw_TRANSD_Debit.dtPayColumn), Date)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.dtPayColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property RealName() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.RealNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RealName' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.RealNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cctFullname() As String
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.cctFullnameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cctFullname' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.cctFullnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cusID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.cusIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cusID' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.cusIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property isCredit() As Boolean
            Get
                Return CType(Me(Me.tablevw_TRANSD_Debit.isCreditColumn), Boolean)
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.isCreditColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property custranshid() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tablevw_TRANSD_Debit.custranshidColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'custranshid' in table 'vw_TRANSD_Debit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_TRANSD_Debit.custranshidColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsamtNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.amtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetamtNull()
            Me(Me.tablevw_TRANSD_Debit.amtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsRealNameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.RealNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetRealNameNull()
            Me(Me.tablevw_TRANSD_Debit.RealNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tablevw_TRANSD_Debit.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tablevw_TRANSD_Debit.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscctFullnameNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.cctFullnameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcctFullnameNull()
            Me(Me.tablevw_TRANSD_Debit.cctFullnameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscusIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.cusIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcusIDNull()
            Me(Me.tablevw_TRANSD_Debit.cusIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscustranshidNull() As Boolean
            Return Me.IsNull(Me.tablevw_TRANSD_Debit.custranshidColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcustranshidNull()
            Me(Me.tablevw_TRANSD_Debit.custranshidColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COMP_CCT_TRANSHRow
        Inherits Global.System.Data.DataRow

        Private tableCOMP_CCT_TRANSH As COMP_CCT_TRANSHDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMP_CCT_TRANSH = CType(Me.Table, COMP_CCT_TRANSHDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableCOMP_CCT_TRANSH.IDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property code() As Integer
            Get
                Return CType(Me(Me.tableCOMP_CCT_TRANSH.codeColumn), Integer)
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.codeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property Fullname() As String
            Get
                Return CType(Me(Me.tableCOMP_CCT_TRANSH.FullnameColumn), String)
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.FullnameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property FatherName() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.FatherNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FatherName' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.FatherNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property CouID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.CouIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CouID' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.CouIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property AreaID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.AreaIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaID' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.AreaIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property AdrID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.AdrIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdrID' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.AdrIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property SourceID() As System.Guid
            Get
                Return CType(Me(Me.tableCOMP_CCT_TRANSH.SourceIDColumn), Global.System.Guid)
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.SourceIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property SalerID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.SalerIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalerID' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.SalerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property DoyID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.DoyIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DoyID' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.DoyIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property PrfID() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.PrfIDColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrfID' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.PrfIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property phn() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.phnColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'phn' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.phnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property mob() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.mobColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mob' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.mobColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property fax() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.faxColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fax' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.faxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property email() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.emailColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.emailColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property afm() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.afmColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'afm' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.afmColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property cmt() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.cmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmt' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.cmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.modifiedByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedBy' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.modifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property modifiedOn() As Date
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.modifiedOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'modifiedOn' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.modifiedOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdOn() As Date
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.createdOnColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdOn' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.createdOnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property createdBy() As System.Guid
            Get
                Try
                    Return CType(Me(Me.tableCOMP_CCT_TRANSH.createdByColumn), Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdBy' in table 'COMP_CCT_TRANSH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.createdByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property isCompany() As Boolean
            Get
                Return CType(Me(Me.tableCOMP_CCT_TRANSH.isCompanyColumn), Boolean)
            End Get
            Set
                Me(Me.tableCOMP_CCT_TRANSH.isCompanyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsFatherNameNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.FatherNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetFatherNameNull()
            Me(Me.tableCOMP_CCT_TRANSH.FatherNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsCouIDNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.CouIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetCouIDNull()
            Me(Me.tableCOMP_CCT_TRANSH.CouIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsAreaIDNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.AreaIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetAreaIDNull()
            Me(Me.tableCOMP_CCT_TRANSH.AreaIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsAdrIDNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.AdrIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetAdrIDNull()
            Me(Me.tableCOMP_CCT_TRANSH.AdrIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsSalerIDNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.SalerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetSalerIDNull()
            Me(Me.tableCOMP_CCT_TRANSH.SalerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsDoyIDNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.DoyIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetDoyIDNull()
            Me(Me.tableCOMP_CCT_TRANSH.DoyIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsPrfIDNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.PrfIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetPrfIDNull()
            Me(Me.tableCOMP_CCT_TRANSH.PrfIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsphnNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.phnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetphnNull()
            Me(Me.tableCOMP_CCT_TRANSH.phnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmobNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.mobColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmobNull()
            Me(Me.tableCOMP_CCT_TRANSH.mobColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsfaxNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.faxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetfaxNull()
            Me(Me.tableCOMP_CCT_TRANSH.faxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.emailColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetemailNull()
            Me(Me.tableCOMP_CCT_TRANSH.emailColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsafmNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.afmColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetafmNull()
            Me(Me.tableCOMP_CCT_TRANSH.afmColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscmtNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.cmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcmtNull()
            Me(Me.tableCOMP_CCT_TRANSH.cmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedByNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.modifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedByNull()
            Me(Me.tableCOMP_CCT_TRANSH.modifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IsmodifiedOnNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.modifiedOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetmodifiedOnNull()
            Me(Me.tableCOMP_CCT_TRANSH.modifiedOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedOnNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.createdOnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedOnNull()
            Me(Me.tableCOMP_CCT_TRANSH.createdOnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Function IscreatedByNull() As Boolean
            Return Me.IsNull(Me.tableCOMP_CCT_TRANSH.createdByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub SetcreatedByNull()
            Me(Me.tableCOMP_CCT_TRANSH.createdByColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_TRANSH_CRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_TRANSH_CRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_TRANSH_CRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_TRANSH_CRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_TRANSDRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_TRANSDRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_TRANSDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_TRANSDRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class TRANSH_FRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TRANSH_FRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As TRANSH_FRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As TRANSH_FRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_TRANSHRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_TRANSHRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_TRANSHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_TRANSHRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class CCT_TRANSHRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CCT_TRANSHRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As CCT_TRANSHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As CCT_TRANSHRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_PAYTYPESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_PAYTYPESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_PAYTYPESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_PAYTYPESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_TRANS_EXTRA_CHARGESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_TRANS_EXTRA_CHARGESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_TRANS_EXTRA_CHARGESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_TRANS_EXTRA_CHARGESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_TRANSD_CreditRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_TRANSD_CreditRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_TRANSD_CreditRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_TRANSD_CreditRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class vw_TRANSD_DebitRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vw_TRANSD_DebitRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As vw_TRANSD_DebitRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As vw_TRANSD_DebitRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
    Public Class COMP_CCT_TRANSHRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As COMP_CCT_TRANSHRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New(ByVal row As COMP_CCT_TRANSHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Row() As COMP_CCT_TRANSHRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DM_TRANSTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_TRANSH_CTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_TRANSH_C"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, code, name, modifiedBy, modifiedOn, createdOn, createdBy, RealName FRO" &
                "M dbo.vw_TRANSH_C"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function Fill(ByVal dataTable As DM_TRANS.vw_TRANSH_CDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)>
        Public Overridable Overloads Function GetData() As DM_TRANS.vw_TRANSH_CDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DM_TRANS.vw_TRANSH_CDataTable = New DM_TRANS.vw_TRANSH_CDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_TRANSDTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_TRANSD"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("transhID", "transhID")
            tableMapping.ColumnMappings.Add("BankName", "BankName")
            tableMapping.ColumnMappings.Add("cash", "cash")
            tableMapping.ColumnMappings.Add("amt", "amt")
            tableMapping.ColumnMappings.Add("cmt", "cmt")
            tableMapping.ColumnMappings.Add("dtPay", "dtPay")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("bankID", "bankID")
            tableMapping.ColumnMappings.Add("GRMONTH", "GRMONTH")
            tableMapping.ColumnMappings.Add("paid", "paid")
            tableMapping.ColumnMappings.Add("PayTypeName", "PayTypeName")
            tableMapping.ColumnMappings.Add("PayTypeID", "PayTypeID")
            tableMapping.ColumnMappings.Add("depositor", "depositor")
            tableMapping.ColumnMappings.Add("cctFullname", "cctFullname")
            tableMapping.ColumnMappings.Add("cusID", "cusID")
            tableMapping.ColumnMappings.Add("isCredit", "isCredit")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, transhID, BankName, cash, amt, cmt, dtPay, RealName, modifiedOn, creat" &
                "edOn, bankID, GRMONTH, paid, PayTypeName, PayTypeID, depositor,cctFullname ,cusI" &
                "D,isCredit" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANSD" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE (transhID = @transhID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function Fill(ByVal dataTable As DM_TRANS.vw_TRANSDDataTable, ByVal transhID As System.Guid) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID, System.Guid)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class TRANSH_FTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRANSH_F"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("transhID", "transhID")
            tableMapping.ColumnMappings.Add("filename", "filename")
            tableMapping.ColumnMappings.Add("comefrom", "comefrom")
            tableMapping.ColumnMappings.Add("extension", "extension")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            tableMapping.ColumnMappings.Add("FileCategory", "FileCategory")
            tableMapping.ColumnMappings.Add("fileCatID", "fileCatID")
            tableMapping.ColumnMappings.Add("ownerID", "ownerID")
            tableMapping.ColumnMappings.Add("belongsTo", "belongsTo")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TF.ID, TF.code, TF.transhID, TF.filename, TF.comefrom, TF.extension, TF.mo" &
                "difiedBy, TF.modifiedOn, TF.createdOn, TF.createdBy, F.name AS FileCategory, TF." &
                "fileCatID, TF.ownerID, TF.belongsTo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   TRANSH_F AS TF LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " &
                "         FILE_CAT AS F ON F.ID = TF.fileCatID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE (TF.transhID = @transhID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TF.ID, TF.code, TF.transhID, TF.filename, TF.comefrom, TF.extension, TF.mo" &
                "difiedBy, TF.modifiedOn, TF.createdOn, TF.createdBy, F.name AS FileCategory, TF." &
                "fileCatID, TF.ownerID, TF.belongsTo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   TRANSH_F AS TF LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " &
                "         FILE_CAT AS F ON F.ID = TF.fileCatID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "fileCatID = '13BB0928-713" &
                "3-40F9-8DD6-72CCED7B0326' and" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "(TF.transhID = @transhID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT TF.ID, TF.code, TF.transhID, TF.filename, TF.comefrom, TF.extension, TF.mo" &
                "difiedBy, TF.modifiedOn, TF.createdOn, TF.createdBy, F.name AS FileCategory, TF." &
                "fileCatID, TF.ownerID, TF.belongsTo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   TRANSH_F AS TF LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " &
                "         FILE_CAT AS F ON F.ID = TF.fileCatID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "fileCatID = 'FABEC87B-A5E" &
                "4-43E1-A0B0-A7D4AC7B7D68' and" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "(TF.transhID = @transhID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT TF.ID, TF.code, TF.transhID, TF.filename, TF.comefrom, TF.extension, TF.mo" &
                "difiedBy, TF.modifiedOn, TF.createdOn, TF.createdBy, F.name AS FileCategory, TF." &
                "fileCatID, TF.ownerID, TF.belongsTo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   TRANSH_F AS TF LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " &
                "         FILE_CAT AS F ON F.ID = TF.fileCatID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "fileCatID = 'FF18E31A-6CE" &
                "C-4184-B536-66B678812738' and" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "(TF.transhID = @transhID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT TF.ID, TF.code, TF.transhID, TF.filename, TF.comefrom, TF.extension, TF.mo" &
                "difiedBy, TF.modifiedOn, TF.createdOn, TF.createdBy, F.name AS FileCategory, TF." &
                "fileCatID, TF.ownerID, TF.belongsTo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   TRANSH_F AS TF LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " &
                "         FILE_CAT AS F ON F.ID = TF.fileCatID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "fileCatID = '744D1789-498" &
                "F-4659-9D72-D14DA015364C' and" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "(TF.transhID = @transhID)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function FillByTranshID(ByVal dataTable As DM_TRANS.TRANSH_FDataTable, ByVal transhID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (transhID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)>
        Public Overridable Overloads Function FillByCloset(ByVal dataTable As DM_TRANS.TRANSH_FDataTable, ByVal transhID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (transhID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)>
        Public Overridable Overloads Function FillByDoor(ByVal dataTable As DM_TRANS.TRANSH_FDataTable, ByVal transhID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (transhID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)>
        Public Overridable Overloads Function FillByKitchen(ByVal dataTable As DM_TRANS.TRANSH_FDataTable, ByVal transhID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (transhID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)>
        Public Overridable Overloads Function FillBySC(ByVal dataTable As DM_TRANS.TRANSH_FDataTable, ByVal transhID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (transhID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_TRANSHTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_TRANSH"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("cusID", "cusID")
            tableMapping.ColumnMappings.Add("dtCharge", "dtCharge")
            tableMapping.ColumnMappings.Add("GRMONTH", "GRMONTH")
            tableMapping.ColumnMappings.Add("amt", "amt")
            tableMapping.ColumnMappings.Add("cmt", "cmt")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            tableMapping.ColumnMappings.Add("Totamt", "Totamt")
            tableMapping.ColumnMappings.Add("vatamt", "vatamt")
            tableMapping.ColumnMappings.Add("bal", "bal")
            tableMapping.ColumnMappings.Add("SalerName", "SalerName")
            tableMapping.ColumnMappings.Add("SalerID", "SalerID")
            tableMapping.ColumnMappings.Add("EmpTID", "EmpTID")
            tableMapping.ColumnMappings.Add("invTypeDescr", "invTypeDescr")
            tableMapping.ColumnMappings.Add("description", "description")
            tableMapping.ColumnMappings.Add("invType", "invType")
            tableMapping.ColumnMappings.Add("empID", "empID")
            tableMapping.ColumnMappings.Add("DebitCost", "DebitCost")
            tableMapping.ColumnMappings.Add("DevicesCost", "DevicesCost")
            tableMapping.ColumnMappings.Add("salerProfit", "salerProfit")
            tableMapping.ColumnMappings.Add("FullTranshDescription", "FullTranshDescription")
            tableMapping.ColumnMappings.Add("AreaId", "AreaId")
            tableMapping.ColumnMappings.Add("adrid", "adrid")
            tableMapping.ColumnMappings.Add("couid", "couid")
            tableMapping.ColumnMappings.Add("benchSalesPrice", "benchSalesPrice")
            tableMapping.ColumnMappings.Add("benchPurchasePrice", "benchPurchasePrice")
            tableMapping.ColumnMappings.Add("benchProfit", "benchProfit")
            tableMapping.ColumnMappings.Add("dtAgreement", "dtAgreement")
            tableMapping.ColumnMappings.Add("offerCusAcceptance", "offerCusAcceptance")
            tableMapping.ColumnMappings.Add("waitingForAgreement", "waitingForAgreement")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, code, cusID, dtCharge, GRMONTH, amt, cmt, modifiedBy, modifiedOn, crea" &
                "tedOn, createdBy, Fullname, RealName, Totamt, vatamt, bal, SalerName, SalerID, E" &
                "mpTID, invTypeDescr, description, invType, empID, DebitCost, DevicesCost, salerP" &
                "rofit, FullTranshDescription, AreaId, adrid, couid, benchSalesPrice, benchPurcha" &
                "sePrice, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           benchProfit, dtAgreement, offerCusAcceptance, waitingForAg" &
                "reement" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANSH" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE (cusID = @cusID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cusID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "cusID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ID, code, cusID, dtCharge, GRMONTH, amt, cmt, modifiedBy, modifiedOn, crea" &
                "tedOn, createdBy, Fullname, RealName, Totamt, vatamt, bal, SalerName, SalerID, E" &
                "mpTID, invTypeDescr, description, invType, empID, DebitCost, DevicesCost, salerP" &
                "rofit, FullTranshDescription, AreaId, adrid, couid, benchSalesPrice, benchPurcha" &
                "sePrice, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           benchProfit, dtAgreement, offerCusAcceptance, waitingForAg" &
                "reement" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANSH" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE (compTrashID = @compTrashID)  and compID <>cusI" &
                "D "
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@compTrashID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "compTrashID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ID, code, cusID, dtCharge, GRMONTH, amt, cmt, modifiedBy, modifiedOn, crea" &
                "tedOn, createdBy, Fullname, RealName, Totamt, vatamt, bal, SalerName, SalerID, E" &
                "mpTID, invTypeDescr, description, invType, empID, DebitCost, DevicesCost, salerP" &
                "rofit, FullTranshDescription, AreaId, adrid, couid, benchSalesPrice, benchPurcha" &
                "sePrice, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           benchProfit, dtAgreement, offerCusAcceptance, waitingForAg" &
                "reement" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANSH" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE (compTrashID = @compTrashID) and (cusID = @cusI" &
                "D)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@compTrashID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "compTrashID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cusID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "cusID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function Fill(ByVal dataTable As DM_TRANS.vw_TRANSHDataTable, ByVal cusID As System.Guid) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(cusID, System.Guid)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)>
        Public Overridable Overloads Function GetData(ByVal cusID As System.Guid) As DM_TRANS.vw_TRANSHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(cusID, System.Guid)
            Dim dataTable As DM_TRANS.vw_TRANSHDataTable = New DM_TRANS.vw_TRANSHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)>
        Public Overridable Overloads Function FillByComp(ByVal dataTable As DM_TRANS.vw_TRANSHDataTable, ByVal compTrashID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (compTrashID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(compTrashID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)>
        Public Overridable Overloads Function FillByCompAndCus(ByVal dataTable As DM_TRANS.vw_TRANSHDataTable, ByVal compTrashID As Global.System.Nullable(Of Global.System.Guid), ByVal cusID As System.Guid) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (compTrashID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(compTrashID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(cusID, System.Guid)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class CCT_TRANSHTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCT_TRANSH"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("FatherName", "FatherName")
            tableMapping.ColumnMappings.Add("CouID", "CouID")
            tableMapping.ColumnMappings.Add("AreaID", "AreaID")
            tableMapping.ColumnMappings.Add("AdrID", "AdrID")
            tableMapping.ColumnMappings.Add("SourceID", "SourceID")
            tableMapping.ColumnMappings.Add("SalerID", "SalerID")
            tableMapping.ColumnMappings.Add("DoyID", "DoyID")
            tableMapping.ColumnMappings.Add("PrfID", "PrfID")
            tableMapping.ColumnMappings.Add("phn", "phn")
            tableMapping.ColumnMappings.Add("mob", "mob")
            tableMapping.ColumnMappings.Add("fax", "fax")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("afm", "afm")
            tableMapping.ColumnMappings.Add("cmt", "cmt")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select c.* from cct C" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE ID IN(SELECT  CUSID FROM TRANSH)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY C.Fullnam" &
                "e "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function Fill(ByVal dataTable As DM_TRANS.CCT_TRANSHDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_PAYTYPESTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_PAYTYPES"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT vw_PAYTYPES.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_PAYTYPES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function Fill(ByVal dataTable As DM_TRANS.vw_PAYTYPESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_TRANS_EXTRA_CHARGESTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_TRANS_EXTRA_CHARGES"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("amt", "amt")
            tableMapping.ColumnMappings.Add("transhID", "transhID")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT vw_TRANS_EXTRA_CHARGES.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANS_EXTRA_CHARGES" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "where transhID=@t" &
                "ranshID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function FillBytranshID(ByVal dataTable As DM_TRANS.vw_TRANS_EXTRA_CHARGESDataTable, ByVal transhID As System.Guid) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID, System.Guid)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_TRANSD_CreditTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_TRANSD_Credit"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("transhID", "transhID")
            tableMapping.ColumnMappings.Add("BankName", "BankName")
            tableMapping.ColumnMappings.Add("cash", "cash")
            tableMapping.ColumnMappings.Add("amt", "amt")
            tableMapping.ColumnMappings.Add("cmt", "cmt")
            tableMapping.ColumnMappings.Add("dtPay", "dtPay")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("bankID", "bankID")
            tableMapping.ColumnMappings.Add("GRMONTH", "GRMONTH")
            tableMapping.ColumnMappings.Add("paid", "paid")
            tableMapping.ColumnMappings.Add("PayTypeName", "PayTypeName")
            tableMapping.ColumnMappings.Add("PayTypeID", "PayTypeID")
            tableMapping.ColumnMappings.Add("depositor", "depositor")
            tableMapping.ColumnMappings.Add("cctFullname", "cctFullname")
            tableMapping.ColumnMappings.Add("cusID", "cusID")
            tableMapping.ColumnMappings.Add("isCredit", "isCredit")
            tableMapping.ColumnMappings.Add("custranshid", "custranshid")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, transhID, BankName, cash, amt, cmt, dtPay, RealName, modifiedOn, creat" &
                "edOn, bankID, GRMONTH, paid, PayTypeName, PayTypeID, depositor,cctFullname ,cusI" &
                "D,isCredit,custranshid" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANSD" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE isCredit = 1 and (transhID = @tr" &
                "anshID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function FillByCredit(ByVal dataTable As DM_TRANS.vw_TRANSD_CreditDataTable, ByVal transhID As System.Guid) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID, System.Guid)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class vw_TRANSD_DebitTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vw_TRANSD_Debit"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("transhID", "transhID")
            tableMapping.ColumnMappings.Add("amt", "amt")
            tableMapping.ColumnMappings.Add("dtPay", "dtPay")
            tableMapping.ColumnMappings.Add("RealName", "RealName")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("cctFullname", "cctFullname")
            tableMapping.ColumnMappings.Add("cusID", "cusID")
            tableMapping.ColumnMappings.Add("isCredit", "isCredit")
            tableMapping.ColumnMappings.Add("custranshid", "custranshid")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, transhID, amt, dtPay, RealName, modifiedOn, createdOn, cctFullname ,cu" &
                "sID,isCredit,custranshid" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM   vw_TRANSD" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE isCredit = 0 and (transhID = @" &
                "transhID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@transhID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "transhID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function FillByDedit(ByVal dataTable As DM_TRANS.vw_TRANSD_DebitDataTable, ByVal transhID As System.Guid) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(transhID, System.Guid)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DataObjectAttribute(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" &
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>
    Partial Public Class COMP_CCT_TRANSHTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COMP_CCT_TRANSH"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("Fullname", "Fullname")
            tableMapping.ColumnMappings.Add("FatherName", "FatherName")
            tableMapping.ColumnMappings.Add("CouID", "CouID")
            tableMapping.ColumnMappings.Add("AreaID", "AreaID")
            tableMapping.ColumnMappings.Add("AdrID", "AdrID")
            tableMapping.ColumnMappings.Add("SourceID", "SourceID")
            tableMapping.ColumnMappings.Add("SalerID", "SalerID")
            tableMapping.ColumnMappings.Add("DoyID", "DoyID")
            tableMapping.ColumnMappings.Add("PrfID", "PrfID")
            tableMapping.ColumnMappings.Add("phn", "phn")
            tableMapping.ColumnMappings.Add("mob", "mob")
            tableMapping.ColumnMappings.Add("fax", "fax")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("afm", "afm")
            tableMapping.ColumnMappings.Add("cmt", "cmt")
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy")
            tableMapping.ColumnMappings.Add("modifiedOn", "modifiedOn")
            tableMapping.ColumnMappings.Add("createdOn", "createdOn")
            tableMapping.ColumnMappings.Add("createdBy", "createdBy")
            tableMapping.ColumnMappings.Add("isCompany", "isCompany")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DreamyKitchenCRM.My.MySettings.Default.DreamyKitchenConnectionStringRemotely
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select c.* " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "from cct C" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "inner join TRANSH on TRANSH.cusID = C.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "where compTras" &
                "hID = @ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY C.Fullname "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "compTrashID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)>
        Public Overridable Overloads Function Fill(ByVal dataTable As DM_TRANS.COMP_CCT_TRANSHDataTable, ByVal ID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ID.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ID.Value, System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),
     Global.System.ComponentModel.ToolboxItem(True),
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" &
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Function UpdateUpdatedRows(ByVal dataSet As DM_TRANS, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Function UpdateInsertedRows(ByVal dataSet As DM_TRANS, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Function UpdateDeletedRows(ByVal dataSet As DM_TRANS, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Overridable Function UpdateAll(ByVal dataSet As DM_TRANS) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" &
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" &
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
